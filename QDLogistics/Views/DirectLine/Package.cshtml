@using QDLogistics.Models;
@using QDLogistics.Commons;
@section styles{
    <link href="~/Content/themes/default/easyui.css" rel="stylesheet" />
    <link href="~/Content/themes/icon.css" rel="stylesheet" />
    <style>
        .action-button {
            display: inline-block;
            max-width: 200px;
        }

            .action-button > div {
                margin: 5px 10px;
            }

        #win-printer section {
            margin-bottom: 5px;
        }

        #win-pick label {
            min-width: 200px;
            margin-left: 0px;
        }

        #table-box tr td {
            border-width: 1px !important;
        }
    </style>
}
@{
    var route = new { warehouseId = ViewData["warehouseId"], adminId = ViewData["adminId"] };
}
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <div class="action-button col-xs-2">
                <div>
                    @Html.DropDownList("FirstMile", (List<SelectListItem>)ViewBag.DirectLineList, htmlAttributes: new { @class = "form-control", @id = "select-type" })
                </div>
                <div>
                    @Html.DropDownList("FirstMile", (List<SelectListItem>)ViewBag.FirstMileList, htmlAttributes: new { @class = "form-control", @id = "select-method" })
                </div>
                <div>
                    <select class="form-control" id="select-typeMethod">
                        <option value="0">全部</option>
                    </select>
                </div>
                <div>
                    <button type="button" class="btn btn-default btn-lg btn-block" id="btn-sync">同步產品序號</button>
                </div>
                <div>
                    <button type="button" class="btn btn-default btn-lg btn-block" id="btn-pick">列印檢貨單</button>
                </div>
                <div>
                    <button type="button" class="btn btn-default btn-lg btn-block" id="btn-ship">開始出貨</button>
                </div>
                <div>
                    <button type="button" class="btn btn-default btn-lg btn-block" id="btn-enter">輸入訂單號<br />(優先出貨)</button>
                </div>
                <div class="hidden">
                    <div id="win-pick" class="easyui-window" title="撿貨單" style="width:1400px;height:500px;padding:5px;"
                         data-options="iconCls:'icon-save',collapsible:false,minimizable:false,maximizable:false,closed:true,draggable:false,resizable:false,modal:true"></div>
                    <div id="dialog-serial" class="easyui-dialog" title="請輸入產品序號/品號" data-options="iconCls:'icon-edit',closed:true,resizable:false,onBeforeClose:ProductSerialData.Refresh_Page" style="width:1400px;top:50px;">
                        <div class="col-sm-12" data-options="region:'north',border:false" style="text-align:right;padding:5px;">
                            <div class="col-sm-10" id="info-box" style="text-align:center; padding:0 5px 0 0;">
                            </div>
                            <div class="col-sm-2 no-padding">
                                <button class="btn btn-default btn-sm btn-block" id="btn-next">儲存/下一步</button>
                                <button class="btn btn-default btn-sm btn-block" id="btn-prev">取消/上一步</button>
                                <button class="btn btn-default btn-sm btn-block">打印Box</button>
                            </div>
                        </div>
                        <div data-options="region:'center'">
                            <table id="table-box" class="easyui-datagrid" style="width:100%;height:400px" data-options="onBeforeSelect:function(){return false;}">
                                <thead>
                                    <tr>
                                        <th data-options="field:'OrderID',width:'7%',align:'center'">訂單</th>
                                        <th data-options="field:'ProductID',width:'7%',align:'center'">SKU</th>
                                        <th data-options="field:'ProductName',width:'35%',align:'center'">品名</th>
                                        <th data-options="field:'SerialNumber',width:'11%',align:'center'">Serial</th>
                                        <th data-options="field:'TagNo',width:'18%',align:'center'">標籤號碼</th>
                                        <th data-options="field:'Declared',width:'5%',align:'center'">Value</th>
                                        <th data-options="field:'Weight',width:'5%',align:'center'">Weight</th>
                                        <th data-options="field:'Battery',width:'5%',align:'center'">Battery</th>
                                        <th data-options="field:'InBox',width:'5%',align:'center'">裝箱</th>
                                        <th data-options="field:'Note',width:'13%',align:'center'">備註</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                            <table id="table-pickup" class="easyui-datagrid" style="width:100%;" data-options="onBeforeSelect:function(){return false;}">
                                <thead>
                                    <tr>
                                        <th data-options="field:'Picked',width:'5%',align:'center'"></th>
                                        <th data-options="field:'OrderID',width:'7%',align:'center'">訂單</th>
                                        <th data-options="field:'ProductID',width:'7%',align:'center'">SKU</th>
                                        <th data-options="field:'ProductName',width:'35%',align:'center'">品名</th>
                                        <th data-options="field:'SerialNumber',width:'11%',align:'center'">Serial</th>
                                        <th data-options="field:'TagNo',width:'18%',align:'center'">標籤號碼</th>
                                        <th data-options="field:'Declared',width:'5%',align:'center'">Value</th>
                                        <th data-options="field:'Weight',width:'5%',align:'center'">Weight</th>
                                        <th data-options="field:'Battery',width:'5%',align:'center'">Battery</th>
                                        <th data-options="field:'Note',width:'13%',align:'center'">備註</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                        <div data-options="region:'south',border:false" style="text-align:right;padding:5px;">
                            <div class="col-sm-8" style="padding:0px;">
                                <table class="table table-bordered" style="margin-bottom:5px;">
                                    <tr>
                                        <td rowspan="5"><img id="sku-img" height="150" /></td>
                                        <td colspan="2"><span id="sku-name">&nbsp;</span></td>
                                    </tr>
                                    <tr>
                                        <td><span id="width-mm"></span>&nbsp;mm</td>
                                        <td><span id="width-inch"></span>&nbsp;inch</td>
                                    </tr>
                                    <tr>
                                        <td><span id="length-mm"></span>&nbsp;mm</td>
                                        <td><span id="length-inch"></span>&nbsp;inch</td>
                                    </tr>
                                    <tr>
                                        <td><span id="height-mm"></span>&nbsp;mm</td>
                                        <td><span id="height-inch"></span>&nbsp;inch</td>
                                    </tr>
                                    <tr>
                                        <td><span id="weight-g"></span>&nbsp;g</td>
                                        <td><span id="weight-lb"></span>&nbsp;lb</td>
                                    </tr>
                                </table>
                            </div>
                            <div class="col-sm-4" style="height:175px;">
                                <div style="margin-bottom:5px; position: absolute; bottom:0px; right:0px;">
                                    <span id="message-error" style="margin-right:5px;font-size:16px;color:red;vertical-align:middle;"></span>
                                    <input type="text" class="easyui-textbox" id="input-serial" style="width:300px;height:30px;" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="dialog-order" class="easyui-dialog" title="請輸入訂單號碼" data-options="iconCls:'icon-edit',closed:true,draggable:false,resizable:false,onClose:function(){$orderInput.val('');}" style="width:300px;">
                        <input type="text" class="form-control" id="input-order" />
                    </div>
                    <div id="dialog-recycle" class="easyui-dialog" title="請輸入標籤號碼" data-options="iconCls:'icon-edit',closed:true,draggable:false,resizable:false,onClose:function(){return false;}" style="width:500px;">
                        <div id="msg-labelError" style="margin-right:5px;font-size:16px;color:red;vertical-align:middle;"></div>
                        <input type="text" class="form-control" id="input-label" />
                    </div>
                </div>
            </div>
            <article class="col-xs-10">
                <table id="DataGrid"></table>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <script src="~/scripts/jquery.easyui-1.4.3.min.js"></script>
    <script src="~/scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/signalr/hubs"></script>
    @Html.Raw(ViewBag.WCPScript)
    <script type="text/javascript">
        var pager, pageSize = 100;
        var $dataGrid;
        var directLineMethodList;
        var $typeSelect = $('#select-type'), $typeMethodSelect = $('#select-typeMethod'), $methodSelect = $('#select-method'),
            $shipBtn = $("#btn-ship"), $pickWin = $('#win-pick'), $serialDialog = $('#dialog-serial'), $serialInput = $('#input-serial'),
            $orderDialog = $('#dialog-order'), $orderInput = $('#input-order'), $recycleDialog = $('#dialog-recycle'), $labelErrorMsg = $('#msg-labelError'), $labelInput = $('#input-label'),
            $boxInfo = $('#info-box'), $pickupTable = $('#table-pickup'), $boxTable = $('#table-box'), $boxID;

        var isSync = false, taskID = null, now = undefined;

        $(function () {
            var conn = $.connection.apiServer;
            $.connection.hub.start().done(function () {
                conn.server.register('@ViewData["adminName"]');

                var url = '@Url.Action("getDirectLineMethod", "directLine")';
                ajaxUrl(url, 'get', {}).done(function (response) {
                    if (response.status) {
                        directLineMethodList = response.data;
                        $typeSelect.trigger('change');
                    } else {
                        alert(response.message);
                    }
                });

                dataInit();
            });

            conn.client.refreshOrderPickUp = function (response) {
                var data = $.parseJSON(response)
                if (data.Status == 5) {
                    var msg = '訂單【' + data.OrderID + '】回收包裹，請確認是否取出!';
                    ajaxData('@Url.Action("Receive", "CaseEvent")', 'get', { caseID: data.CaseID, type:5, request: confirm(msg) });
                } else {
                    if (data.Status == 1) {
                        var check = boxOrderList.rows.filter(order => order.OrderID == data.OrderID);
                        if (check.length > 0) {
                            confirm('訂單【' + data.OrderID + '】已取消出貨，請確認是否取出!');
                        }
                    }
                    ProductSerialData.Update_OrderList(data);
                }
            };

            $typeSelect.change(function () {
                $typeMethodSelect.html($typeMethodSelect.find('option:first').clone());
                $typeMethodSelect.append(setSelectOption(directLineMethodList[$typeSelect.val()]));
                $typeMethodSelect.trigger('change');
            });

            $methodSelect.change(function () {
                ProductSerialData.Get_Data();
            });

            $typeMethodSelect.change(function(){
                ProductSerialData.Get_Data();
            });

            $('#btn-sync').click(function () {
                if(isSync) return alert('目前尚有工作在執行中');

                var url = "@Url.Action("checkPurchaseItem", "orderSync")";
                ajaxUrl(url, 'get', {}).done(function (response) {
                    if(response['status']) {
                        taskID = response['taskID'];
                        isSync = true;

                        url = "@Url.Action("checkTaskStatus", "orderSync")";
                        ajaxUrl(url, 'get', { id: taskID }).done(function (response) {
                            $('div#text-hint strong').html("工作" + response['message']);

                            var refreshId = setInterval(function() {
                                ajaxUrl(url, 'get', { id: taskID }).done(function (response) {
                                    $('div#text-hint strong').html("工作" + response['message']);

                                    if(!response['status']) {
                                        window.clearInterval(refreshId);
                                        ProductSerialData.Get_Data();
                                        isSync = false;
                                    }
                                });
                            }, 5000);
                        });
                    }

                    alert(response['message']);
                });
            });

            $("#btn-pick").click(function () {
                $pickWin.window("open").window("refresh", "@Url.Action("packagePickUpList", "directLine")?directLine=" + $typeSelect.val() + "&firstMile=" + $methodSelect.val() + "&methodID=" + $typeMethodSelect.val());
            });

            $shipBtn.click(function () {
                if (!ProductSerialData.Is_Init()) return alert("尚未預載資料!");
                $typeSelect.attr('disabled', 'disabled');
                $methodSelect.attr('disabled', 'disabled');

                ProductSerialData.Get_Box();

                $serialDialog.dialog('open');
                $serialInput.textbox('textbox').focus();
            });

            $("#btn-next").click(function () {
                if (parseInt($('#input-boxNo').val()) == parseInt($('#text-boxNo').text()) && !confirm("是否確定進行封箱出貨?")) return;

                ProductSerialData.Save_box();
            });

            $("#btn-prev").click(function () {
                var boxNo = parseInt($('#input-boxNo').val());
                if (boxNo != 1 && confirm("是否確定回上一步?")) {
                    $('#input-boxNo').val(boxNo - 1);
                    ProductSerialData.Save_box();
                } else {
                    ProductSerialData.Refresh_Page();
                }
            });

            $("#btn-enter").click(function () {
                if(!ProductSerialData.Is_Init()) return alert("尚未預載資料!");

                $orderDialog.dialog('open');
                $orderInput.focus();
            });

            $serialInput.textbox('textbox').keypress(function (event) {
                if (event.keyCode == 13) {
                    ProductSerialData.Check_Serial($serialInput.textbox('getValue'));
                }
            });

            $orderInput.keypress(function (event) {
                if (event.keyCode == 13) {
                    if (isEmpty($orderInput.val())) return alert('不可為空!');

                    ProductSerialData.Pick_Order($orderInput.val()).done(function(result){
                        if(result){
                            $orderDialog.dialog('close');
                            $shipBtn.trigger('click');
                        }else{
                            return alert('查無此訂單!');
                        }
                    });
                }
            });
        });

        function dataInit() {
            $dataGrid = $("#DataGrid").datagrid({
                title: "未出貨包裹 列表",
                idField: "BoxID",
                url: "@Url.Action("GetBoxData", "DirectLine")",
                queryParams: {
                    Status: 0,
                    WarehouseFrom: @route.warehouseId
                },
                width: "100%",
                height: window.screen.availHeight-280,
                checkOnSelect: false,
                selectOnCheck: false,
                singleSelect: false,
                frozenColumns: [[
                    {
                        field: "BoxID", title: "Box ID", width: 150, align: "center", sortable: true,
                        formatter: function (value, row, index) {
                            if (!isEmpty(value)) {
                                return "<a href='@Url.Action("boxEdit", "directLine")/" + value + "'>" + value + "</a>";
                            }
                        }
                    },
                    { field: "SupplierBoxID", title: "Supplier Box ID", width: 150, align: "center", sortable: true }
                ]],
                columns: [[
                    { field: "CreateDate", title: "Create Date", width: 120, align: "center", sortable: false },
                    { field: "WarehouseTo", title: "To", width: 150, align: "center", sortable: false },
                    { field: "BoxQty", title: "Box Qty", width: 60, align: "center", sortable: false },
                    { field: "TotalWeight", title: "Total Weight", width: 80, align: "center", sortable: false },
                    { field: "WITID", title: "SC WIT ID", width: 150, align: "center", sortable: false },
                    { field: "Tracking", title: "Tracking", width: 150, align: "center", sortable: false },
                    { field: "Status", title: "Status", width: 80, align: "center", sortable: false },
                    { field: "Type", title: "Type", width: 150, align: "center", sortable: false },
                    { field: "Note", title: "Notes", width: 250, align: "center", sortable: false },
                    {
                        field: "Action", title: "", width: 80, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return row.IsReserved ? "<button type='button' class='btn btn-default btn-sm' onClick='openBox(" + row.DirectLine + "," + row.Method + ",\"" + row.BoxID + "\")'>開啟保留</button>" : '';
                        }
                    }

                ]],
                onBeforeSelect: function () {
                    return false
                },
                pagination: true,
                pagePosition: "bottom",
                pageSize: pageSize
            });

            pager = $dataGrid.datagrid("getPager");
            $(pager).pagination({
                pageSize: pageSize,
                showPageList: true,
                pageList: [100, 200, 300, 500],
                beforePageTest: "第",
                afterPageTest: "頁，共 {pages} 頁",
                displayMsg: "顯示 {from} 到 {to} 筆資料，共 {total} 筆資料"
            });
        }

        function openBox(type, method, boxID) {
            $typeSelect.find("option[value='" + type + "']").attr('selected', true).trigger('change');
            $methodSelect.find("option[value='" + method + "']").attr('selected', true).trigger('change');
            ProductSerialData.Get_Box(boxID);

            $typeSelect.attr('disabled', 'disabled');
            $methodSelect.attr('disabled', 'disabled');
            $serialDialog.dialog('open');
            $serialInput.textbox('textbox').focus();
        }

        function printPickUpList() {
            var url = '@Url.Action("printPickUpList", "directLine")';
            ajaxUrl(url, 'post', { directLine: $typeSelect.val(), firstMile: $methodSelect.val(), methodID: $typeMethodSelect.val() }).done(function (response) {
                if(response['status']){
                    print($.param({fileName: response['fileName'], filePath: response['filePath'], amount: response['amount']}, true));
                }

                $pickWin.window('close');
            });
        }

        function setSelectOption(optionList, value) {
            var option = "";

            if (!isEmpty(optionList) && optionList.length > 0) {
                for (var i in optionList) {
                    option += "<option value='" + optionList[i]["value"] + "' " + (!isEmpty(value) && optionList[i]["value"] == value ? "selected" : "") + ">" + optionList[i]["text"] + "</option>";
                }
            }

            return option;
        }

        function isEmpty(value) {
            return (value == undefined) || (value == null) || (value == "");
        }

        function ajaxUrl(url, type, data) {
            type = !isEmpty(type) ? type : {};
            data = !isEmpty(data) ? data : {};

            return $.ajax({
                url: url,
                type: type,
                data: data,
                dataType: "json"
            });
        }

        function print(params) {
            jsWebClientPrint.print(params);
        }

        var ProductSerialData = function () {
            var isInit = false, isSaving = false, needSerial, orderChangeList = [], boxOrderList = { rows: [] };
            var groupList, productList, serialList, fileList, SkuData;
            var gb_OrderID, gb_PackageID;

            var init = function () {
                isInit = false;
                var url = '@Url.Action("getOrderSerialData", "directLine")';
                ajaxUrl(url, 'get', { type: $typeSelect.val(), firstMile: $methodSelect.val(), methodID: $typeMethodSelect.val() }).done(function (response) {
                    if(response['status']){
                        groupList = response['data']['groupList'];
                        productList = response['data']['productList'];
                        serialList = response['data']['serialList'];
                        fileList = response['data']['fileList'];
                        SkuData = response.data.SkuData;
                        groupList["Priority"] = {};
                    }
                    isInit = response['status'];
                });
                orderLocked();
                orderChangeList = [];
            };

            var getBoxData = function (boxID) {
                var url = '@Url.Action("getCurrentBox", "directLine")';
                ajaxUrl(url, 'get', { firstMile: $methodSelect.val(), type: $typeSelect.val(), boxID:boxID }).done(function (response) {
                    if (response.status) {
                        $boxInfo.html(response.data.info);
                        $boxID = $('#text-boxID');

                        $("#btn-printLabel").click(function () { CheckLabel('Label'); });
                        $("#btn-printAWB").click(function () { CheckLabel('AWB') });
                        $("#btn-reserveBox").click(function () {
                            var url = '@Url.Action("ReserveBox", "directLine")';
                            ajaxUrl(url, 'post', { BoxID: $boxID.text() }).done(function (response) {
                                if (response['status']) {
                                    alert('已完成包留!');
                                    ProductSerialData.Refresh_Page();
                                } else {
                                    alert(response['message']);
                                }
                            });
                        });
                        $("#btn-addPackage").click(function () { CheckLabel('Package') });

                        boxOrderList.rows = [];
                        if (response.data.list.length > 0) {
                            var list = response.data.list;

                            list.forEach(function (value, i) {
                                value.Weight = value.Weight / 1000,
                                value.Declared = value.DeclaredValue,
                                value.Battery = "<img src='../content/img/" + (value.IsBattery ? "checked" : "error") + ".png' runat='server' style='width: auto; height: 15px;'>";
                                value.InBox = "<img src='../content/img/" + (value.InBox ? "checked" : "error") + ".png' runat='server' style='width: auto; height: 15px;'>";
                                boxOrderList.rows.push(value);
                            });
                        }
                        $boxTable.datagrid('loadData', boxOrderList);
                    }
                });
            }

            var checkSerial = function(serial){
                var productId, order, serialNumber;

                error('');
                if(!ProductSerialData.Is_Init()) return alert("尚未預載資料!");

                if (isEmpty(serial)) return error('不可為空!');

                for (var pId in serialList) {
                    //if($.inArray(serial, serialList[pId].used) != -1) return error("序號已被使用!");
                    if($.inArray(serial, serialList[pId].serials) != -1){
                        productId = pId;
                        serialNumber = serial;
                    }
                }

                needSerial = false;
                if (isEmpty(productId)) {
                    var UPCPicked;
                    Object.keys(productList).forEach(function (pId) {
                        UPCPicked = Object.keys(productList[pId]).map(i => productList[pId][i]).filter(product => product.UPC == serial);
                        if (UPCPicked.length > 0) productId = pId;
                    });

                    if (isEmpty(productId)) {
                        if (isEmpty(productList[serial])) return error("找不到產品!");
                        productId = serial;
                    }

                    if (!isEmpty(serialList[productId])) {
                        needSerial = serialList[productId].isRequire;
                    }
                }

                var products = productList[productId];
                var notPicked = Object.keys(products).map(i => products[i]).filter(product => !product.IsPicked);
                if(!isEmpty(gb_OrderID) && !isEmpty(gb_PackageID)){
                    notPicked = notPicked.filter(product => product.OrderID == gb_OrderID && product.PackageID == gb_PackageID);
                }
                if(notPicked.length == 0) return error("產品不符合!");

                var pData, order, typeList = ["Single", "Multiple", "Priority"];
                for(var type in typeList){
                    if(!isEmpty(groupList[typeList[type]])){
                        for(var i in notPicked){
                            pData = notPicked[i];
                            order = groupList[typeList[type]][pData.OrderID]

                            if (!isEmpty(order)) {
                                if (checkPicked(pData, order, serialNumber)) {
                                    showLogistic(pData.ProductID);
                                    $pickupTable.datagrid('loadData', { rows: [] });

                                    $boxTable.datagrid('loadData', boxOrderList);
                                    $boxTable.datagrid('scrollTo', boxOrderList.rows.length - 1);
                                }
                                return;
                            }
                        }
                    }
                }
            };

            function checkPicked(pData, order, serialNumber) {
                if (!checkDeclaredValue(order[pData.PackageID])) {
                    return error("此訂單已超過總價值!");
                }

                if (!checkWeight(order[pData.PackageID])) {
                    return error("此訂單已超過總重量20KG!");
                }

                var product = order[pData.PackageID][pData.ItemID];

                if (needSerial) {
                    return error("產品需要輸入序號!");
                } else {
                    pData.QtyPicked = product.data.QtyPicked += 1;
                    pData.IsPicked = product.data.IsPicked = (product.data.QtyPicked == product.data.Qty);

                    if (!isEmpty(serialNumber)) {
                        product.serial.push(serialNumber);
                        if ($.inArray(serialNumber, serialList[product.data.ProductID].used) == -1) {
                            serialList[product.data.ProductID].used.push(serialNumber);
                        }
                    }
                }

                if (isEmpty(gb_OrderID) || isEmpty(gb_PackageID)) orderLocked(pData.OrderID, pData.PackageID);

                if (product.data.IsPicked) {
                    var needPick = Object.keys(order[pData.PackageID]).map(itemID => order[pData.PackageID][itemID]).filter(product => !product.data.IsPicked);

                    if (needPick.length == 0) {
                        if (!findOrderChange(pData.OrderID)) {
                            updatePicked(pData, order, false);
                            joinBoxList(order[pData.PackageID]);
                        }

                        if (orderChangeList.length != 0) init();

                        return true;
                    }
                }
                showList(order[pData.PackageID]);

                return error("");
            }

            function checkDeclaredValue(itemList) {
                var value = 0, maxTotal = parseFloat($('#text-maxTotal').text());
                Object.keys(itemList).forEach(function (itemID) {
                    value += itemList[itemID].data.DeclaredValue;
                });

                return maxTotal == 0 || maxTotal >= parseFloat($('#text-total').text()) + value;
            }

            function checkWeight(itemList) {
                var value = 0, maxWeight = 20.5;
                Object.keys(itemList).forEach(function (itemID) {
                    value += itemList[itemID].data.Weight;
                });

                return maxWeight >= parseFloat($('#text-weight').text()) + value / 1000;
            }

            function findOrderChange(orderID){
                if(orderChangeList.length > 0){
                    var orderFilter = orderChangeList.filter(function(order) {
                        return (order['OrderID'] == orderID) && (order['Status'] == 1);
                    });

                    if(orderFilter.length > 0){
                        alert('訂單【'+ orderID +' 】'+(orderFilter[0]['Status'] == 1 ? '已取消出貨!' : '已完成出貨!'));
                        orderLocked();
                        return true;
                    }
                }
                return false;
            }

            function updatePicked(pData, order, retry) {
                var picked = new Array(), serials = new Object();

                var itemList = order[pData.PackageID];
                var weight = parseFloat($('#text-weight').text());
                var total = parseFloat($('#text-total').text());
                for(var itemID in order[pData.PackageID]){
                    picked.push(itemList[itemID].data);
                    serials[itemID] = itemList[itemID].serial;
                    weight += parseFloat(itemList[itemID].data.Weight) / 1000 * itemList[itemID].data.Qty;
                    total += parseFloat(itemList[itemID].data.DeclaredValue) * itemList[itemID].data.Qty;
                }
                $('#text-total').text(total);
                $('#text-weight').text(weight);

                var url = '@Url.Action("orderPicked", "directLine")';
                ajaxUrl(url, 'post', { boxID: $boxID.text(), picked: picked, serials: serials }).done(function(response){
                    if (response['status']) {
                        if (retry) error('訂單【' + gb_OrderID + '】更新失敗，資料已重新寄送!');
                        print($.param(response.data, true));
                        orderLocked();
                    } else {
                        alert(response['message']);
                    }
                }).fail(function(jqXHR, textStatus, errorThrown) {
                    updatePicked(pData, order, true);
                });
                orderLocked();
            }

            var resetSerial = function(){
                error("");

                var rows = $pickupTable.datagrid('getRows');
                if(rows.length == 0) return true;

                var notPicked = rows.filter(product => !product.IsPicked);
                if(notPicked.length > 0){
                    var order = searchOrder(notPicked[0].OrderID);
                    $.each(order[notPicked[0].PackageID], function(itemID, product){
                        if(product.serial.length > 0){
                            var serials = $.grep(serialList[product.data.ProductID].used, function(s, i){
                                return $.inArray(s, product.serial);
                            });

                            product.data.IsPicked = false;
                            product.data.QtyPicked = 0;
                            product.serial = [];

                            productList[product.data.ProductID][product.data.ItemID] = product.data;
                            serialList[product.data.ProductID].used = serials;
                        }
                    });
                }

                orderLocked();

                return $pickupTable.datagrid('loadData', {total:0, rows:[]});
            };

            function pickOrder(orderID){
                var order = searchOrder(orderID);

                if(!isEmpty(order)){
                    resetSerial();
                    orderLocked(orderID, Object.keys(order)[0]);
                    showList(order[gb_PackageID]);
                    return true;
                }

                return false;
            }

            function searchOrder(orderID){
                var order = false, typeList = ["Single", "Multiple", "Priority"];

                $.each(typeList, function (i, type) {
                    if(!isEmpty(groupList[type])) {
                        order = groupList[type][orderID];

                        if(!isEmpty(order)) return false;
                    }
                });

                return order;
            }

            // 顯示當前出貨訂單
            function showList(items) {
                var data = { total: 0, rows: [] };
                var product, serialNumber;

                for(var itemID in items){
                    product = items[itemID].data;
                    serialNumber = items[itemID].serial;

                    for(var i=1; i <= product.Qty; i++){
                        data.rows.push({
                            IsPicked: product.IsPicked, OrderID: product.OrderID, PackageID: product.PackageID, ProductID: product.ProductID, ProductName: product.ProductName, SerialNumber: (i <= product.QtyPicked ? serialNumber[i - 1] : ""),
                            TagNo: product.TagNo, Note: product.Note, Declared: product.DeclaredValue, Weight: product.Weight / 1000,
                            Battery: "<img src='../content/img/" + (product.IsBattery ? "checked" : "error") + ".png' runat='server' style='width: auto; height: 15px;'>",
                            Picked: "<img src='../content/img/" + (i <= product.QtyPicked ? "checked" : "error") + ".png' runat='server' style='width: auto; height: 15px;'>"});
                        data.total++;
                    }
                }

                $pickupTable.datagrid('loadData', data);
            }

            function showLogistic(sku) {
                var data = SkuData.filter(data => data.Sku == sku);
                if (data.length > 0) {
                    $('#sku-img').attr('src', 'http://internal.qd.com.tw:8080/Uploads/' + data[0].ImagePath);
                    $('#sku-name').html(data[0].Sku + '-' + data[0].Name);
                    $('#width-mm').html(data[0].Width);
                    $('#width-inch').html((data[0].Width * 0.0393700787).toFixed(2));
                    $('#length-mm').html(data[0].Length);
                    $('#length-inch').html((data[0].Length * 0.0393700787).toFixed(2));
                    $('#height-mm').html(data[0].Height);
                    $('#height-inch').html((data[0].Height * 0.0393700787).toFixed(2));
                    $('#weight-g').html(data[0].Weight);
                    $('#weight-lb').html((data[0].Weight * 0.00220462262).toFixed(2));
                }
            }

            // 加入至已出貨訂單清單
            function joinBoxList(items) {
                var product, serialNumber;

                for (var itemID in items) {
                    product = items[itemID].data;
                    serialNumber = items[itemID].serial;

                    for (var i = 1; i <= product.Qty; i++) {
                        boxOrderList.rows.push({
                            OrderID: product.OrderID, PackageID: product.PackageID, ProductID: product.ProductID, ProductName: product.ProductName, SerialNumber: (i <= product.QtyPicked ? serialNumber[i - 1] : ""),
                            TagNo: product.TagNo, Note: product.Note, Declared: product.DeclaredValue, Weight: product.Weight / 1000,
                            Battery: "<img src='../content/img/" + (product.IsBattery ? "checked" : "error") + ".png' runat='server' style='width: auto; height: 15px;'>",
                            InBox: "<img src='../content/img/" + (product.InBox ? "checked" : "error") + ".png' runat='server' style='width: auto; height: 15px;'>"
                        });
                    }
                }
            }

            // 訂單鎖定
            function orderLocked(orderID, packageID){
                gb_OrderID = orderID;
                gb_PackageID = packageID;
            }

            // 顯示錯誤訊息
            function error(message){
                $("#message-error").html(message);
                $serialInput.textbox('clear');

                return false;
            }

            var CheckLabel = function (type) {
                $recycleDialog.dialog('close');
                $recycleDialog.dialog('open');
                $labelInput.val('').focus().unbind("keypress");;
                $labelInput.keypress(function (event) {
                    if (event.keyCode == 13) {
                        var labelID = $labelInput.val();
                        if (isEmpty(labelID)) return alert('不可為空!');

                        switch (type) {
                            case "Label":
                            case "AWB":
                                var url = '@Url.Action("CheckLabel", "DirectLine")';
                                ajaxUrl(url, 'post', { LabelID: $labelInput.val(), BoxID: $boxID.text(), Type: type }).done(function (response) {
                                    if (response['status']) {
                                        if (!isEmpty(response.message) && type == 'AWB') {
                                            if (confirm(response.message)) {
                                                MoveLabel(labelID, 'MoveOut');
                                            }
                                        } else {
                                            print($.param({ fileName: response.data['fileName'], filePath: response.data['filePath'], amount: response.data['amount'], printerName: response.data['printerName'] }, true));
                                        }
                                    } else {
                                        alert(response['message']);
                                    }
                                });
                                break;
                            case "Package":
                                MoveLabel(labelID, 'MoveIn');
                                break;
                        }

                        $labelInput.val('');
                    }
                });
            };

            var MoveLabel = function (labelID, action) {
                var url = '@Url.Action("MoveLabel", "directLine")';
                ajaxUrl(url, 'post', { LabelID: labelID, BoxID: $boxID.text(), Action: action }).done(function (response) {
                    if (response['status']) {
                        alert('Success!');
                        ProductSerialData.Get_Box($boxID.text());
                    } else {
                        alert(response['message']);
                    }
                });
            }

            return {
                Is_Init: function(){
                    return isInit;
                },
                Get_Data: init,
                Get_Box: getBoxData,
                Check_Serial: checkSerial,
                Refresh_Page: function () {
                    if (!confirm("是否確定要關閉?")) return false;

                    location.href = '@Url.Action("package", "directLine")';
                },
                Pick_Order: function(orderID){
                    var deferred = $.Deferred();

                    if(pickOrder(orderID)){
                        deferred.resolve(true);
                    }else{
                        var url = '@Url.Action("PickOrder", "ajax")';
                        ajaxUrl(url, 'get', { orderID: orderID, warehouseId: @route.warehouseId }).done(function (response) {
                            if(response['status']){
                                var data = response['data'];

                                groupList['Priority'][orderID] = data['groupList'];
                                $.each(data['productList'], function(pId, products){
                                    if(productList[pId] == undefined) {
                                        productList[pId] = {};
                                    }

                                    $.each(products, function(itemID, product){
                                        productList[pId][itemID] = product;
                                    });
                                });
                                $.each(data['serialList'], function(pId, serial){
                                    serialList[pId] = serial;
                                });
                                $.each(data['fileList'], function(packageID, file){
                                    fileList[packageID] = file;
                                });

                                if(pickOrder(orderID)) deferred.resolve(true);
                            }

                            deferred.resolve(false);
                        });
                    }

                    return deferred.promise();
                },
                Update_OrderList: function(order) {
                    orderChangeList.push(order);
                },
                Save_box: function () {
                    if (isSaving) return alert('工作執行中，請稍候!');

                    isSaving = true;
                    var url = '@Url.Action("saveBox", "directLine")';
                    ajaxUrl(url, 'post', { boxID: $boxID.text(), boxNo: parseInt($('#input-boxNo').val()) }).done(function (response) {
                        if (response.status) {
                            if (!isEmpty(response.data.boxID)) {
                                ProductSerialData.Get_Box(response.data.boxID);
                            } else {
                                if (response.data.fileList.length > 0) {
                                    var file = response.data.fileList[0];
                                    print($.param({ fileName: file['fileName'], filePath: file['filePath'], amount: file['amount'], printerName: file['printerName'] }, true));
                                }

                                if (response.data.errorList.length > 0) {
                                    var errorList = response.data.errorList;

                                    var i = 0;
                                    $labelErrorMsg.html(errorList[i].ErrorMsg);
                                    $recycleDialog.dialog('open');
                                    $labelInput.val('').focus().unbind("keypress");;
                                    $labelInput.keypress(function (event) {
                                        if (event.keyCode == 13) {
                                            if (isEmpty($labelInput.val())) return alert('不可為空!');

                                            if ($labelInput.val() == errorList[i].LabelID) {
                                                if (++i < errorList.length) {
                                                    $labelErrorMsg.html(errorList[i].ErrorMsg);
                                                } else {
                                                    if (confirm("出貨完成，是否刷新頁面?")) {
                                                        location.href = '@Url.Action("package", "directLine")';
                                                    } else {
                                                        $serialDialog.dialog('close');
                                                    }

                                                }
                                            } else {
                                                $labelErrorMsg.html(errorList[i].ErrorMsg + ' - 輸入錯誤!');
                                            }
                                        }
                                    });
                                } else {
                                    if (confirm("出貨完成，是否刷新頁面?")) {
                                        location.href = '@Url.Action("package", "directLine")';
                                    } else {
                                        $serialDialog.dialog('close');
                                    }
                                }
                            }
                        } else {
                            alert(response.message);
                        }
                        isSaving = false;
                    });
                }
            };
        }();
    </script>
}