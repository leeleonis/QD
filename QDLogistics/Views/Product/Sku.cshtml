@section styles{
    <link href="~/Content/themes/default/easyui.css" rel="stylesheet" />
    <style>
        button:not(.processing) > span:nth-child(1) + span {
            display: none;
        }

        button.processing span:nth-child(1) {
            display: none;
        }
    </style>
}
<div id="content">
    <section id="widget-grid" class="">
        <div class="row table-parent">
            <div class="tool-content table-row col-xs-12">
                <div class="filter-select table-cell col-xs-3">
                    <div class="table-parent col-xs-12">
                        <div class="table-cell col-xs-8">
                            <select id="batterySelect" class="form-control input-sm">
                                <option value="">電池(no change)</option>
                                <option value="true">是</option>
                                <option value="false">否</option>
                            </select>
                            <select id="exportSelect" class="form-control input-sm">
                                <option value="">出口報關(no change)</option>
                            </select>
                            <select id="exportMethodSelect" class="form-control input-sm">
                                <option value="">申報性質(no change)</option>
                            </select>
                        </div>
                        <div class="table-cell col-xs-3">
                            <button id="btn-apply" class="btn btn-default btn-sm btn-block">Apply</button>
                            <button id="btn-reset" class="btn btn-default btn-sm btn-block">Reset</button>
                        </div>
                    </div>
                </div>
                <div class="search-input table-cell col-xs-7">
                    <div class="table-parent col-xs-12">
                        <div class="table-cell form-horizontal col-xs-9">
                            <div class="col-xs-12 no-padding">
                                <label class="col-xs-4 control-label">SKU</label>
                                <div class="col-xs-8">
                                    <input id="sku" class="form-control input-sm" type="text">
                                </div>
                            </div>
                            <div class="col-xs-12 no-padding">
                                <label class="col-xs-4 control-label">Product Name</label>
                                <div class="col-xs-8">
                                    <input id="productName" class="form-control input-sm" type="text">
                                </div>
                            </div>
                        </div>
                        <div class="table-cell col-xs-2">
                            <button type="button" id="btn-search" class="btn btn-info btn-lg">Search</button>
                        </div>
                    </div>
                </div>
                <div class="table-cell col-xs-2">
                    <div class="action-button col-xs-12">
                        <button class="btn btn-default btn-sm btn-block" id="btn-sync" data-href="@Url.Action("checkSku", "orderSync")">
                            <span>資料同步 Sync</span><span>同步中，請稍等</span>
                        </button>
                        <button class="btn btn-default btn-sm btn-block" id="btn-import">導入 Import</button>
                        <button class="btn btn-default btn-sm btn-block" id="btn-export">導出 Export</button>
                        <form id="form-data" method="post" enctype="multipart/form-data">
                            <input type="hidden" name="type" value="sku" />
                            <input type="hidden" name="action" id="input-action" />
                            <input type="hidden" name="IDs" id="input-IDs" />
                            <input class="hidden" type="file" name="file" id="file-import" />
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <article class="col-xs-12">
                <table id="DataGrid"></table>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <script src="~/scripts/jquery.easyui-1.4.3.min.js"></script>
    <script type="text/javascript">
        var pager, pageSize = 100;
        var selected = false, orderColumOption;
        var $dataGrid, $batterySelect = $("#batterySelect"), $exportSelect = $("#exportSelect"), $exportMethodSelect = $("#exportMethodSelect"), $sku = $("#sku"), $productName = $("#productName");
        var $syncBtn = $("#btn-sync"), $importBtn = $("#btn-import"), $importFile = $("#file-import"), $exportBtn = $("#btn-export");

        $(function () {
            getOption("@Url.Action("skuColumOption", "ajax")").done(function (response) {
                orderColumOption = response;
                $exportSelect.append(getSelectOption(orderColumOption.export));
                $exportMethodSelect.append(getSelectOption(orderColumOption.exportMethod));
                dataInit();
            });

            $("#btn-apply, #btn-search").on("click", reload);

            $(".search-input").on('change', 'input, select', function () {
                $dataGrid.datagrid('reload');
            });

            $("#btn-reset").click(function () {
                $(".filter-select").find("select").prop("selectedIndex", 0);
                reload();
            });

            $syncBtn.click(function () {
                if ($(this).is(".processing")) return;

                getOption($(this).data("href")).done(function (response) {
                    alert(response['message']);
                });
            });

            $importBtn.click(function () {
                document.getElementById("form-data").reset();
                $importFile.trigger("click");
            });

            $importFile.change(function () {
                $("#input-action").val("import");
                var form = document.querySelector("#form-data");
                var data = new FormData(form);

                $.ajax({
                    url: "@Url.Action("upload", "file")",
                    type: "POST",
                    data: data,
                    dataType: "JSON",
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        alert(response.Msg);
                        console.log(response.Result);
                        if (response.Result) {
                            reload();
                        }
                    }
                });
            });

            $exportBtn.click(function () {
                var skus = [];

                var rows = $dataGrid.datagrid('getSelections');
                if (rows.length == 0) {
                    rows = $dataGrid.datagrid('getRows');
                }

                if (rows.length > 0) {
                    for (var i in rows) {
                        skus[i] = rows[i].Sku;
                    }

                    $("#input-IDs").val(skus);
                    $("#form-data").attr("action", "@Url.Action("export", "file")").submit();
                }
            });
        });

        function dataInit() {
            $dataGrid = $("#DataGrid").datagrid({
                title: "品號 列表",
                url: "@Url.Action("SkuData", "ajax")",
                queryParams: {},
                width: "100%",
                height: "700",
                checkOnSelect: false,
                selectOnCheck: false,
                singleSelect: false,
                columns: [[
                    { field: "ck", checkbox: true },
                    { field: "Sku", title: "SKU", width: "10%", align: "center", sortable: false },
                    { field: "ProductName", title: "Product Name", width: "30%", align: "center", sortable: false },
                    {
                        field: "ProductType", title: "Product Type<br />品項", width: "10%", align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<select class='form-control input-sm' id='ProductType-" + index + "' onchange='onSelect(" + index + ")'>" + getSelectOption(orderColumOption.productType, value) + "</select>";
                        }
                    },
                    { field: "Brand", title: "Brand", width: "10%", align: "center", sortable: false },
                    {
                        field: "Battery", title: "Battery", width: "6%", align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return setCheckBox(index, this.field, value);
                        }
                    }, {
                        field: "Origin", title: "Country<br />產地", width: "10%", align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<select class='form-control input-sm' id='Origin-" + index + "' onchange='onSelect(" + index + ")'>" + getSelectOption(orderColumOption.country, value) + "</select>";
                        }
                    }, {
                        field: "Export", title: "Export<br />出口報關 (預設)", width: "10%", align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<select class='form-control input-sm' id='Export-" + index + "' onchange='onSelect(" + index + ")'>" + getSelectOption(orderColumOption.export, value) + "</select>";
                        }
                    }, {
                        field: "ExportMethod", title: "Export Method<br />申報性質 (預設)", width: "10%", align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<select class='form-control input-sm' id='ExportMethod-" + index + "' onchange='onSelect(" + index + ")'>" + getSelectOption(orderColumOption.exportMethod, value) + "</select>";
                        }
                    }, {
                        field: "PurchaseInvoice", title: "Purchase Invoice<br />進口發票", width: "20%", align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<input type='text' class='form-control input-sm' id='PurchaseInvoice-" + index + "' value='" + value + "' onchange='onSelect(" + index + ")'>";
                        }
                    }, {
                        field: "Weight", title: "Weight<br />重量", width: "10%", align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<input type='text' class='form-control input-sm' id='Weight-" + index + "' value='" + value + "' onchange='onSelect(" + index + ")'>";
                        }
                    }, {
                        field: "ShippingWeight", title: "Shipping Weight<br />運輸重量", width: "10%", align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<input type='text' class='form-control input-sm' id='ShippingWeight-" + index + "' value='" + value + "' onchange='onSelect(" + index + ")'>";
                        }
                    }, {
                        field: "save", title: "<button type='button' class='btn btn-default btn-sm' onclick='saveData()'>SAVE</button>", width: "60", sortable: false,
                        formatter: function (value, row, index) {
                            return "<button type='button' class='btn btn-default btn-sm' id='btn-" + index + "' onclick='saveData(" + index + ")' disabled>SAVE</button>"
                        }
                    }
                ]],
                onLoadSuccess: function (data) {
                    $dataGrid.datagrid('uncheckAll');
                    $('div.datagrid-body').unbind('dblclick');
                },
                onBeforeLoad: function (param) {
                    param.Battery = $batterySelect.val();
                    param.Export = $exportSelect.val();
                    param.ExportMethod = $exportMethodSelect.val();
                    param.sku = $sku.val();
                    param.productName = $productName.val();
                },
                onBeforeSelect: selectAction,
                onBeforeUnselect: selectAction,
                onCheck: onCheck,
                onUncheck: onUncheck,
                onCheckAll: onCheckAll,
                onUncheckAll: onUncheckAll,
                pagination: true,
                pagePosition: "bottom",
                pageSize: pageSize
            });

            pager = $dataGrid.datagrid("getPager");
            $(pager).pagination({
                pageSize: pageSize,
                showPageList: true,
                pageList: [100, 200, 300, 500],
                beforePageTest: "第",
                afterPageTest: "頁，共 {pages} 頁",
                displayMsg: "顯示 {from} 到 {to} 筆資料，共 {total} 筆資料"
            });
        }

        function selectAction(index, row) {
            if (selected) {
                selected = false;
                return true;
            }

            return false;
        }

        function onSelect(index) {
            selected = true;
            $dataGrid.datagrid('selectRow', index);
        }

        function onCheck(index, row) {
            selected = true;
            $dataGrid.datagrid('selectRow', index);
        }

        function onUncheck(index, row) {
            selected = true;
            $dataGrid.datagrid('unselectRow', index);
        }

        function onCheckAll(rows) {
            $dataGrid.datagrid('selectAll');
        }

        function onUncheckAll(rows) {
            $dataGrid.datagrid('unselectAll');
        }

        function saveData(index) {
            var data = [];
            var saveAll = index == undefined;

            if (saveAll) {
                var rows = $dataGrid.datagrid('getSelections');
                for (var i in rows) {
                    index = $dataGrid.datagrid('getRowIndex', rows[i]);
                    data.push(setData(rows[i], index));
                    $("#btn-" + index).attr("disabled", "disabled");
                }
                $dataGrid.datagrid("clearSelections");
            } else {
                row = $dataGrid.datagrid("getRows")[index];
                data.push(setData(row, index));
                $("#btn-" + index).attr("disabled", "disabled");

                selected = true;
                $dataGrid.datagrid('unselectRow', index);
            }

            if (data.length > 0) {
                updateData(data).done(function (response) {
                    if (response['status']) {
                        alert("Success!");
                    }

                    if (saveAll) reload();
                });
            }
        }

        function setData(row, index) {
            return {
                Sku: row.Sku,
                ProductTypeID: $("#ProductType-" + index).val(),
                Battery: $("#Battery-" + index).prop("checked"),
                Origin: $("#Origin-" + index).val(),
                Export: $("#Export-" + index).val(),
                ExportMethod: $("#ExportMethod-" + index).val(),
                PurchaseInvoice: $("#PurchaseInvoice-" + index).val(),
                Weight: $('#Weight-' + index).val(),
                ShippingWeight: $('#ShippingWeight-' + index).val()
            }
        }

        function updateData(data) {
            return $.ajax({
                url: "@Url.Action("SkuUpdate", "ajax")",
                type: "post",
                data: { data: data },
                dataType: "json"
            });
        }

        function setCheckBox(index, field, value) {
            var name = field + "-" + index;
            return "<input type='checkbox' class='form-control' id='" + name + "' " + (value ? "checked" : "") + " onchange='onSelect(" + index + ")'>"
        }

        function getSelectOption(optionList, value) {
            var option = "";

            if (optionList.length > 0) {
                for (var i in optionList) {
                    option += "<option value='" + optionList[i]["value"] + "' " + (optionList[i]["value"] == value ? "selected" : "") + ">" + optionList[i]["text"] + "</option>";
                }
            }

            return option;
        }

        function checkProcess(id) {
            var url = "@Url.Action("checkProcessStatus", "orderSync")/" + id;

            getOption(url).done(function (response) {
                if (!response['success']) {
                    alert(response['message']);
                    return;
                } else {
                    if (response['status']) {
                        alert(response['message']);
                        $syncBtn.removeClass("processing");
                        reload();
                        return;
                    }
                }
            });
        }

        function getOption(url) {
            return $.ajax({
                url: url,
                dataType: "json"
            });
        }

        function reload() {
            $dataGrid.datagrid('reload');
        }
    </script>
}