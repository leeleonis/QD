@using QDLogistics.OrderService

@section styles{
    <link href="~/Content/themes/default/easyui.css" rel="stylesheet" />
    <link href="~/Content/themes/icon.css" rel="stylesheet" />
    <style>
        table tbody tr td {
            vertical-align: middle !important;
        }

        .filterColumn td div {
            padding: 0
        }
    </style>
}
<div id="content">
    <section id="widget-grid" class="">
        <div class="hidden">
            <div id="dialog-case" class="easyui-dialog" title="請選擇Case Type" data-options="iconCls:'icon-edit',closed:true,resizable:false" style="width:500px;">
                <div class="col-sm-12" style="text-align:center; padding:0px;">
                    <form id="form-case">
                        <input type="hidden" id="packageID" name="packageID" />
                        <table class="table table-bordered text-left" style="margin:0;">
                            <tr>
                                <td width="50"><input class="form-control" type="radio" name="caseType" value="0" style="height:20px;" checked /></td>
                                <td colspan="2">Cancel Shipment</td>
                            </tr>
                            <tr>
                                <td width="50"><input class="form-control" type="radio" name="caseType" value="2" style="height:20px;" /></td>
                                <td colspan="2">Update Shipment</td>
                            </tr>
                            <tr>
                                <td width="50"><input class="form-control" type="radio" name="caseType" value="3" style="height:20px;" /></td>
                                <td width="40%">Change Shipping Method</td>
                                <td style="padding:0px;"><select class="form-control" id="select-method" name="methodID"></select></td>
                            </tr>
                            <tr><td style="text-align:right;" colspan="3"><button type="button" class="btn btn-default btn-sm" id="btn-submit">送出</button></td></tr>
                        </table>
                    </form>
                </div>
            </div>
        </div>
        <div class="row">
            <article class="col-xs-12">
                <table id="DataGrid"></table>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <script src="~/scripts/jquery.easyui-1.4.3.min.js"></script>
    <script src="~/scripts/datagrid-detailview.js"></script>
    <script type="text/javascript">
        var pager, pageSize = 100, selectOption, filterValue = {};
        var selected = false, loaded = false;
        var $dataGrid;
        var $caseDialog = $('#dialog-case'), $caseForm = $('#form-case'), $methodSelect = $('#select-method'), $submitBtn = $('#btn-submit');

        $(function () {
            getOption("@Url.Action("getSelectOption", "overview")").done(function (response) {
                if (response['status']) {
                    selectOption = response['data'];
                } else {
                    alert(response['message']);
                }

                dataInit();
            });

            $submitBtn.click(function () {
                if (confirm("是否確定送出?")) {
                    var data = $caseForm.serializeArray();
                    ajaxUrl('@Url.Action("createCaseEvent", "caseEvent")', 'post', data).done(function (response) {
                        if (response.status) {
                            alert("Success!");
                            $caseDialog.dialog("close");
                        } else {
                            alert(response.message);
                        }
                    });
                }
            });
        });

        function dataInit() {
            $dataGrid = $("#DataGrid").datagrid({
                title: "訂單 總覽",
                idField: "PackageID",
                url: "@Url.Action("getOrderData", "overview")",
                queryParams: {},
                width: "100%",
                height: window.screen.availHeight-200,
                checkOnSelect: false,
                selectOnCheck: false,
                singleSelect: false,
                frozenColumns: [[
                    {
                        field: "OrderID", title: "Order ID<br />訂單號碼", width: 200, align: "center", sortable: true,
                        formatter: function (value, row, index) {
                            if (!isEmpty(value)) {
                                if (row.ParentOrderID != 0) {
                                    var url = value + "(<a href='http://internal.qd.com.tw:8080/Order/Edit/" + row.ParentOrderID + "' target='_blank'>" + row.ParentOrderID + "</a> - <a href='https://dm.cwa.sellercloud.com/Orders/Orders_details.aspx?id=" + row.ParentOrderID + "' target='_blank'>SC</a>)"
                                } else {
                                    var url = "<a href='http://internal.qd.com.tw:8080/Order/Edit/" + value + "' target='_blank'>" + value + "</a> - <a href='https://dm.cwa.sellercloud.com/Orders/Orders_details.aspx?id=" + value + "' target='_blank'>SC</a>";
                                }
                                if (row.OrderSourceOrderId != "") url += "<br />" + row.OrderSourceOrderId;
                                return url;
                            } else {
                                return "<input type='text' class='form-control s-orderID' value='" + (!isEmpty(filterValue['OrderID']) ? filterValue['OrderID'] : '') + "'>";
                            }
                        }
                    }
                ]],
                columns: [[
                    {
                        field: "eBayUserID", title: "User ID<br />客戶帳號", width: 130, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            if (!isEmpty(value)) {
                                return "<a href='http://feedback.ebay.com/ws/eBayISAPI.dll?ViewFeedback2&UserID=" + value + "' target='_blank'>" + value + "</a>";
                            } else {
                                if (!isEmpty(row.IsFilter)) {
                                    return "<input type='text' class='form-control s-userID' value='" + (!isEmpty(filterValue['UserID']) ? filterValue['UserID'] : '') + "'>";
                                }
                            }
                        }
                    },
                    { field: "PaymentDate", title: "Payment Date<br />付款日", width: 120, align: "center", sortable: false },
                    { field: "Sku", title: "SKU<br />品號", width: 110, align: "center", sortable: false },
                    { field: "DisplayName", title: "Item Name<br />品名", width: 440, align: "center", sortable: false },
                    { field: "ShippingCountry", title: "Country<br />國家", width: 120, align: "center", sortable: false },
                    { field: "DeclaredTotal", title: "Export Value<br />出口價值", width: 90, align: "center", sortable: false },
                    { field: "OrderCurrencyCode", title: "Order Currency<br />幣別", width: 100, align: "center", sortable: false },
                    { field: "PaymentStatus", title: "Payment Status<br />付款狀態", width: 100, align: "center", sortable: false },
                    { field: "StatusCode", title: "Order Status<br />訂單狀態", width: 120, align: "center", sortable: false },
                    {
                        field: "Comment", title: "Comment<br />出貨備註", width: 200, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            if (isEmpty(row.IsFilter)) {
                                return "<input type='text' class='form-control input-sm' id='Comment' value='" + value + "' onchange='onDataChange(" + row.PackageID + ")'>";
                            }
                        }
                    },
                    { field: "ProccessStatus", title: "工作區塊", width: 170, align: "center", sortable: false },
                    {
                        field: "HasCaseAction", title: "Case Action", width: 80, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            if (isEmpty(row.IsFilter)) {
                                return "<button type='button' class='btn btn-default btn-sm' onclick='createCase(" + row.PackageID + ")' " + (row.HasCaseAction ? '' : 'disabled') + ">CASE</button>";
                            }
                        }
                    }, {
                        field: "save", title: "<button type='button' class='btn btn-default btn-sm' onclick='SaveData()'>SAVE</button>", width: "60", sortable: false,
                        formatter: function (value, row, index) {
                            return "<button type='button' class='btn btn-default btn-sm' id='btn-save' onclick='SaveData(" + row.PackageID + ")' disabled>SAVE</button>"
                        }
                    }
                ]],
                rowStyler: function (index, value) {
                    if (!isEmpty(value.IsFilter)) return { class: 'filterColumn' }
                },
                onLoadSuccess: function (data) {
                    $dataGrid.datagrid('insertRow', {
                        index: 0,
                        row: setFilterColumn(filterValue)
                    });

                    if (data.total > 0) {
                        $('.datepicker').datepicker({
                            dateFormat: 'yy-mm-dd'
                        });

                        $('.filterColumn').on('change', 'input, select', function () {
                            filterValue = getFilterData();

                            $dataGrid.datagrid('reload');
                        });
                    } else {
                        $dataGrid.datagrid('deleteRow', 0);
                    }
                },
                onBeforeLoad: function (param) {
                    Object.keys(filterValue).forEach(function (key) {
                        if (!isEmpty(filterValue[key])) param[key] = filterValue[key];
                    });
                },
                onBeforeSelect: selectAction,
                onBeforeUnselect: selectAction,
                onCheck: onCheck,
                onUncheck: onUncheck,
                onCheckAll: onCheckAll,
                onUncheckAll: onUncheckAll,
                view: detailview,
                detailFormatter: function (index, row) {
                    return '<div id="itemList"></div>';
                },
                onExpandRow: function (index, row) {
                    if (row.ItemCount == 1) {
                        $dataGrid.datagrid("collapseRow", index);
                    } else {
                        var $itemList = $("div#itemList:eq(" + index + ")");

                        $itemList.panel({
                            border: false,
                            cache: false,
                            href: "@Html.Raw(Url.Action("productList", "overview", new { TargetID = "_id_", Type = "Order" }))".replace("_id_", row.PackageID),
                            onLoad: function (response) {
                                $("#datagrid-row-r1-1-" + index).next("tr").find(".datagrid-row-detail").html($itemList.find("table:hidden").remove().removeClass("hidden"));
                            }
                        });

                        $dataGrid.datagrid("fixDetailRowHeight", index);
                    }
                },
                pagination: true,
                pagePosition: "bottom",
                pageSize: pageSize
            });

            pager = $dataGrid.datagrid("getPager");
            $(pager).pagination({
                pageSize: pageSize,
                showPageList: true,
                pageList: [100, 200, 300, 500],
                beforePageTest: "第",
                afterPageTest: "頁，共 {pages} 頁",
                displayMsg: "顯示 {from} 到 {to} 筆資料，共 {total} 筆資料"
            });
        }

        function selectAction(index, row) {
            if (selected) {
                selected = false;
                return true;
            }

            return false;
        }

        function onDataChange(PackageID) {
            var index = $dataGrid.datagrid("getRowIndex", PackageID);
            $dataGrid.datagrid('checkRow', index);
            $("button#btn-save:eq(" + index + ")").removeAttr("disabled");
        }

        function onSelect(index) {
            $dataGrid.datagrid('checkRow', index);
        }

        function onCheck(index, row) {
            selected = true;
            $dataGrid.datagrid('selectRow', index);
        }

        function onUncheck(index, row) {
            selected = true;
            $dataGrid.datagrid('unselectRow', index);
        }

        function onCheckAll(rows) {
            $dataGrid.datagrid('selectAll');
        }

        function onUncheckAll(rows) {
            $dataGrid.datagrid('unselectAll');
        }

        function SaveData(PackageID) {
            var data = [];
            var saveAll = PackageID == undefined;

            if (!loaded) {
                if (saveAll) {
                    var rows = $dataGrid.datagrid('getSelections');
                    for (var i in rows) {
                        index = $dataGrid.datagrid('getRowIndex', rows[i].PackageID);
                        if (!$("button#btn-save:eq(" + index + ")").is("[disabled]")) {
                            data.push(setData(rows[i], index));
                            $("button#btn-save:eq(" + index + ")").attr("disabled", "disabled");
                        }
                    }
                } else {
                    var index = $dataGrid.datagrid("getRowIndex", PackageID);
                    row = $dataGrid.datagrid("getRows")[index];
                    data.push(setData(row, index));
                    $("button#btn-save:eq(" + index + ")").attr("disabled", "disabled");
                }

                if (data.length > 0) {
                    updateData(data).done(function (response) {
                        if (response['status']) {
                            alert("Success!");
                        } else {
                            alert(response['message']);
                        }

                        loaded = false;
                    });
                }
            }

            $dataGrid.datagrid('uncheckAll');
        }

        function setData(row, index) {
            return {
                ID: row.PackageID,
                OrderID: row.OrderID,
                Comment: $("input#Comment:eq(" + (index - 1)  + ")").val()
            }
        }

        function updateData(data) {
            loaded = true;

            return $.ajax({
                url: "@Url.Action("PackageUpdate", "Overview")",
                type: "post",
                data: { data: data },
                dataType: "json"
            });
        }

        function createCase(packageID) {
            $('#packageID').val(packageID);
            ajaxUrl('@Url.Action("getShippingMethodByDirectLine", "overview")', 'get', { packageID }).done(function (response) {
                if (response.status) {
                    $methodSelect.html(response.data);
                    $caseDialog.dialog('open');
                } else {
                    alert(response.message);
                }
            });
        }

        function ajaxUrl(url, type, data) {
            type = !isEmpty(type) ? type : {};
            data = !isEmpty(data) ? data : {};

            return $.ajax({
                url: url,
                type: type,
                data: data,
                dataType: "json"
            });
        }

        function getOption(url) {
            return $.ajax({
                url: url,
                dataType: "json"
            });
        }

        function isEmpty(value) {
            return (value == undefined) || (value == null) || (value == "");
        }

        function getFilterData() {
            return {
                OrderID: $('.filterColumn .s-orderID').val(),
                UserID: $('.filterColumn .s-userID').val(),
                PaymentDate: $('.filterColumn .s-paymentDate').val(),
                Sku: $('.filterColumn .s-sku').val(),
                ItemName: $('.filterColumn .s-displayName').val(),
                CountryCode: $('.filterColumn .s-countryCode').val(),
                DeclaredTotal: $('.filterColumn .s-declaredTotal').val(),
                CurrencyCode: $('.filterColumn .s-currencyCode').val(),
                PaymentStatus: $('.filterColumn .s-paymentStatus').val(),
                StatusCode: $('.filterColumn .s-statusCode').val(),
                Comment: '',
                ProccessStatus: $('.filterColumn .s-proccessStatusCode').val()
            };
        }

        function setFilterColumn(filterValue) {
            return {
                IsFilter: true,
                ItemCount: 1,
                OrderID: "",
                UserID: "",
                PaymentDate: "<input type='text' class='form-control datepicker s-paymentDate' value='" + (!isEmpty(filterValue['PaymentDate']) ? filterValue['PaymentDate'] : '') + "'>",
                Sku: "<input type='text' class='form-control s-sku' value='" + (!isEmpty(filterValue['Sku']) ? filterValue['Sku'] : '') + "'>",
                DisplayName: "<input type='text' class='form-control s-displayName' value='" + (!isEmpty(filterValue['ItemName']) ? filterValue['ItemName'] : '') + "'>",
                ShippingCountry: "<select class='form-control s-countryCode'><option value=''>全部</option>" + setSelectOption(selectOption['CountryCode'], filterValue['CountryCode']) + "</select>",
                DeclaredTotal: "<input type='text' class='form-control s-declaredTotal' value='" + (!isEmpty(filterValue['DeclaredTotal']) ? filterValue['DeclaredTotal'] : '') + "'>",
                OrderCurrencyCode: "<select class='form-control s-currencyCode'><option value=''>全部</option>" + setSelectOption(selectOption['CurrencyCode'], filterValue['CurrencyCode']) + "</select>",
                PaymentStatus: "<select class='form-control s-paymentStatus'><option value=''>全部</option>" + setSelectOption(selectOption['PaymentStatus'], filterValue['PaymentStatus']) + "</select>",
                StatusCode: "<select class='form-control s-statusCode'><option value=''>全部</option>" + setSelectOption(selectOption['StatusCode'], filterValue['StatusCode']) + "</select>",
                Comment: "",
                ProccessStatus: "<select class='form-control s-proccessStatusCode'><option value=''>全部</option>" + setSelectOption(selectOption['ProccessStatusCode'], filterValue['ProccessStatus']) + "</select>",
            };
        }

        function setSelectOption(optionList, value) {
            var option = "";

            if (optionList.length > 0) {
                for (var i in optionList) {
                    option += "<option value='" + optionList[i]["value"] + "' " + (!isEmpty(value) && optionList[i]["value"] == value ? "selected" : "") + ">" + optionList[i]["text"] + "</option>";
                }
            }

            return option;
        }
    </script>
}


