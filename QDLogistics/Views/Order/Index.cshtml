@using QDLogistics.OrderService

@section styles{
    <link href="~/Content/themes/default/easyui.css" rel="stylesheet" />
    <link href="~/Content/themes/icon.css" rel="stylesheet" />
    <style>
        button:not(.processing) > span:nth-child(1) + span {
            display: none;
        }

        button.processing span:nth-child(1) {
            display: none;
        }
    </style>
}
<div id="content">
    <section id="widget-grid" class="">
        <div class="table-parent">
            <div class="tool-content table-row col-xs-12">
                <div class="filter-select table-cell col-xs-3">
                    <div class="table-parent col-xs-12">
                        <div class="table-cell col-xs-8">
                            <select id="warehouseSelect" class="form-control input-sm">
                                <option value="">出貨倉(no change)</option>
                            </select>
                            <select id="carrierSelect" class="form-control input-sm">
                                <option value="">運輸商(no change)</option>
                            </select>
                            <select id="exportSelect" class="form-control input-sm">
                                <option value="">出口報關(no change)</option>
                            </select>
                            <select id="exportMethodSelect" class="form-control input-sm">
                                <option value="">申報性質(no change)</option>
                            </select>
                            <select id="statusCodeSelect" class="form-control input-sm">
                                <option value="">訂單狀態(no change)</option>
                            </select>
                        </div>
                        <div class="table-cell col-xs-4">
                            <button type="button" id="btn-apply" class="btn btn-default">Apply</button>
                            <button type="button" id="btn-reset" class="btn btn-default">Reset</button>
                        </div>
                    </div>
                </div>
                <div class="search-input table-cell col-xs-7">
                    <div class="table-parent col-xs-12">
                        <div class="table-cell form-horizontal col-xs-10">
                            <div class="col-xs-12 no-padding">
                                <label class="col-xs-2 control-label">Order ID</label>
                                <div class="col-xs-4">
                                    <input class="form-control input-sm" type="text" id="search-orderID">
                                </div>
                                <label class="col-xs-2 control-label">Payment Stats</label>
                                <div class="col-xs-4">
                                    <select class="form-control input-sm" id="search-payment" style="margin-top: 4px;">
                                        <option value="">全部</option>
                                        @foreach (int paymentStatus in Enum.GetValues(typeof(OrderPaymentStatus2)))
                                        {
                                            <option value="@paymentStatus">@Enum.GetName(typeof(OrderPaymentStatus2), paymentStatus)</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-xs-12 no-padding">
                                <label class="col-xs-2 control-label">Item</label>
                                <div class="col-xs-4">
                                    <input class="form-control input-sm" type="text" id="search-item">
                                </div>
                                <label class="col-xs-2 control-label">Status</label>
                                <div class="col-xs-4">
                                    <select class="form-control input-sm" id="search-status" style="margin-top: 4px;">
                                        <option value="">全部</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-xs-12 no-padding">
                                <label class="col-xs-2 control-label">User ID</label>
                                <div class="col-xs-4">
                                    <input class="form-control input-sm" type="text" id="search-userID">
                                </div>
                                <label class="col-xs-2 control-label">Warehouse</label>
                                <div class="col-xs-4">
                                    <select class="form-control input-sm" id="search-warehouse" style="margin-top: 4px;">
                                        <option value="">全部</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-xs-12 no-padding">
                                <label class="col-xs-2 control-label">Source ID</label>
                                <div class="col-xs-4">
                                    <input class="form-control input-sm" type="text" id="search-sourceID">
                                </div>
                                <label class="col-xs-2 control-label">Shipping Method</label>
                                <div class="col-xs-4">
                                    <select class="form-control input-sm" id="search-method" style="margin-top: 4px;">
                                        <option value="">全部</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-xs-12 no-padding">
                                <label class="col-xs-2 control-label">Date From</label>
                                <div class="col-xs-4">
                                    <input class="form-control input-sm datepicker" type="text" id="search-dateFrom" data-dateformat="yy-mm-dd" placeholder="選擇日期">
                                </div>
                                <label class="col-xs-2 control-label">Channel</label>
                                <div class="col-xs-4">
                                    <select class="form-control input-sm" id="search-channel" style="margin-top: 4px;">
                                        <option value="">全部</option>
                                        @foreach (int source in Enum.GetValues(typeof(OrderSource)))
                                        {
                                            <option value="@source">@Enum.GetName(typeof(OrderSource), source)</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-xs-12 no-padding">
                                <label class="col-xs-2 control-label">Date To</label>
                                <div class="col-xs-4">
                                    <input class="form-control input-sm datepicker" type="text" id="search-dateTo" data-dateformat="yy-mm-dd" placeholder="選擇日期">
                                </div>
                                <label class="col-xs-2 control-label">Country</label>
                                <div class="col-xs-4">
                                    <select class="form-control input-sm" id="search-country" style="margin-top: 4px;">
                                        <option value="">全部</option>
                                        @foreach (var country in MyHelp.GetCountries())
                                        {
                                            <option value="@country.ID">@country.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="table-cell col-xs-2">
                            <button type="button" id="btn-search" class="btn btn-info btn-lg">Search</button>
                        </div>
                    </div>
                </div>
                <div class="table-cell col-xs-2">
                    <div class="action-button col-xs-12">
                        <button type="button" class="btn btn-default btn-sm btn-block" id="btn-sync" data-href="@Url.Action("getOrder", "orderSync")"><span>資料同步 Sync</span></button>
                        <button type="button" class="btn btn-default btn-sm btn-block" id="btn-syncDays" data-href="@Url.Action("checkOrder", "orderSync", new { day = 14 })"><span>14天資料同步 Sync Days</span></button>
                        <button type="button" class="btn btn-default btn-sm btn-block" id="btn-disptch">Save & 提交出貨 Dispatch</button>
                        <button type="button" class="btn btn-default btn-sm btn-block" id="btn-split">分批寄送 Split Dispatch</button>
                        <div id="dialog-amount" class="easyui-dialog" title="輸入拆成的包裹數" data-options="iconCls:'icon-edit',closed:true,draggable:false,resizable:false,onClose:function(){$amountInput.val('');}" style="width:300px;">
                            <input type="text" class="form-control" id="input-amount" />
                        </div>
                        <div id="win-split" class="easyui-window" title="分批寄送 Split Dispatch" style="width:700px;height:400px;padding:5px;"
                             data-options="iconCls:'icon-save',collapsible:false,minimizable:false,maximizable:false,closed:true,draggable:false,resizable:false,modal:true"></div>
                        <button type="button" class="btn btn-default btn-sm btn-block" id="btn-recovery">復原訂單 Recovery</button>
                        <button type="button" class="btn btn-default btn-sm btn-block" id="btn-export">導出 Export</button>
                        <!-- <button type="button" class="btn btn-default" id="btn-clear">清除選擇<br />Clear Selected</button> -->
                        <form id="form-data" method="post">
                            <input type="hidden" name="type" value="order" />
                            <input type="hidden" name="IDs" id="input-IDs" />
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <article class="col-xs-12">
                <table id="DataGrid"></table>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <script src="~/scripts/jquery.easyui-1.4.3.min.js"></script>
    <script src="~/scripts/datagrid-detailview.js"></script>
    <script src="~/scripts/jquery.number.min.js"></script>
    <script type="text/javascript">
        var pager, pageSize = 100, splitAmount;
        var selected = false, loaded = false, orderColumOption;
        var $dataGrid;
        var $warehouseSelect = $("#warehouseSelect"), $carrierSelect = $("#carrierSelect"), $exportSelect = $("#exportSelect"), $exportMethodSelect = $("#exportMethodSelect"), $statusCodeSelect = $("#statusCodeSelect");
        var $orderIDSearch = $("#search-orderID"), $itemSearch = $("#search-item"), $userIDSearch = $("#search-userID"), $sourceIDSearch = $("#search-sourceID"), $dateFromSearch = $("#search-dateFrom"), $dateToSearch = $("#search-dateTo"),
            $paymentSearch = $("#search-payment"), $statusSearch = $("#search-status"), $warehouseSearch = $("#search-warehouse"), $methodSearch = $("#search-method"), $channelSearch = $("#search-channel"), $countrySearch = $("#search-country");
        var $syncBtn = $("#btn-sync"), $syncDaysBtn = $("#btn-syncDays"), $disptchBtn = $("#btn-disptch"), $splitBtn = $("#btn-split"), $amountDialog = $("#dialog-amount"), $amountInput = $("#input-amount"), $splitWin = $("#win-split"),
            $recoveryBtn = $("#btn-recovery"), $exportBtn = $("#btn-export");

        $(function () {
            getOption("@Url.Action("orderColumOption", "ajax")").done(function (response) {
                orderColumOption = response;

                $warehouseSelect.append(getSelectOption(orderColumOption.warehouse));
                $carrierSelect.append(getSelectOption(orderColumOption.carrier));
                $exportSelect.append(getSelectOption(orderColumOption.export));
                $exportMethodSelect.append(getSelectOption(orderColumOption.exportMethod));
                $statusCodeSelect.append(getSelectOption(orderColumOption.statusCode));

                if (!isEmpty(urlParam('OrderID'))) $orderIDSearch.val(urlParam('OrderID'));
                $paymentSearch.val(2);
                $statusSearch.append(getSelectOption(orderColumOption.statusCode, (isEmpty(urlParam('OrderID')) ? 2 : null)));
                $warehouseSearch.append(getSelectOption(orderColumOption.warehouse));
                $methodSearch.append(getSelectOption(orderColumOption.carrier));

                dataInit();
            });

            $("#btn-apply, #btn-search").click(function () {
                $dataGrid.datagrid('uncheckAll');
                $dataGrid.datagrid('reload');
            });

            $(".search-input").on('change', 'input, select', function () {
                $dataGrid.datagrid('reload');
            });

            $("#btn-reset").click(function () {
                $(".filter-select").find("select").prop("selectedIndex", 0);
                $dataGrid.datagrid('uncheckAll');
                $dataGrid.datagrid('reload');
            });

            $syncBtn.click(function () {
                var orderIDs = [];
                var rows = $dataGrid.datagrid('getSelections');

                for (var i in rows) {
                    index = $dataGrid.datagrid('getRowIndex', rows[i].PackageID);
                    orderIDs.push(rows[i].OrderID);
                }

                if (orderIDs.length > 0) {
                    $.ajax({
                        url: $(this).data("href"),
                        data: { orderIDs: orderIDs },
                        type: 'POST',
                        dataType: "json",
                        success: function (response) {
                            alert(response['message']);
                            $dataGrid.datagrid('uncheckAll');
                            $dataGrid.datagrid('reload');
                        }
                    });
                }
            });

            $syncDaysBtn.click(function () {
                $.ajax({
                    url: $(this).data("href"),
                    dataType: "json",
                    success: function (response) {
                        alert(response['message']);
                    }
                });
            });

            $disptchBtn.click(function () {
                var packageIDs = [], data = [], hasDataChange = false, message = "";
                var rows = $dataGrid.datagrid('getSelections');

                if (!loaded) {
                    for (var i in rows) {
                        index = $dataGrid.datagrid('getRowIndex', rows[i].PackageID);
                        if (!$("button#btn-save:eq(" + index + ")").is("[disabled]")) {
                            hasDataChange = true;
                        } 

                        if ($("select#MethodID:eq(" + index + ")").val() == null) {
                            message += "訂單 - " + rows[i].OrderID + " 尚未選擇運輸方式!\n";
                        } else {
                            packageIDs.push(rows[i].PackageID);
                            data.push(setData(rows[i], index));
                        }
                    }

                    if (hasDataChange) {
                        if (! confirm('有更動的訂單會即將被儲存再提交. 確認是否繼續?')) return false;
                    }

                    if (message.length > 0) alert(message);

                    if (packageIDs.length > 0) {
                        updateData(data).done(function (response) {
                            if (response['status']) {
                                $.ajax({
                                    url: '@Url.Action("OrderToWaiting", "Order")',
                                    type: 'POST',
                                    data: { packageIDs: packageIDs },
                                    success: function (response) {
                                        alert(response['message']);
                                    }
                                });
                            } else {
                                alert(response['message']);
                            }

                            loaded = false;
                            $dataGrid.datagrid('uncheckAll');
                            $dataGrid.datagrid('reload');
                        });
                    }
                }
            });

            $splitBtn.click(function () {
                var rows = $dataGrid.datagrid('getSelections');

                if (rows.length == 0) return alert("請先選擇一筆訂單!");

                if (rows.length > 1) return alert("只能選擇一筆訂單!");

                if (rows[0].OrderQtyTotal < 2) return alert("產品數量需大於1!");

                var index = $dataGrid.datagrid("getRowIndex", rows[0].PackageID);
                if (!$("button#btn-save:eq(" + index + ")").is("[disabled]")) {
                    return alert("請先儲存資料!");
                }

                $amountDialog.dialog("open");
                $amountInput.focus();
            });

            $amountInput.keypress(function (event) {
                if (event.keyCode == 13) {
                    if (isEmpty($amountInput.val())) return alert('不可為空!');

                    var row = $dataGrid.datagrid('getSelections')[0];
                    if ($amountInput.val() > row.OrderQtyTotal) {
                        return alert("包裏數量不可超過產品數量!");
                    }

                    splitAmount = $amountInput.val();

                    $amountDialog.dialog('close');
                    $splitWin
                        .window("open")
                        .window("refresh", '@Url.Action("orderSplit", "ajax")' + "?PackageID=" + row.PackageID + "&Amount=" + splitAmount);
                }
            });

            $splitWin.on("change", "input", function () {
                var id = $(this).attr('id'), qty = $(this).val(), subTotal = 0;
                var itemID = $(this).data('id'), $item = $('#item-' + itemID);

                $item.find('input').not('#' + id).each(function (index, element) {
                    if (!isEmpty($(this).val())) subTotal += parseInt($(this).val());
                });

                if (!isEmpty(qty)) {
                    qty = parseInt(qty);

                    if (qty > parseInt($item.data('qty')) - subTotal) {
                        alert('已超過最大數量!');
                        qty = parseInt($item.data('qty')) - subTotal;
                    } else if (qty < 0) {
                        alert('數量不可小於0!');
                        qty = 0;
                    }
                } else {
                    qty = 0;
                }

                $(this).val(qty);
                subTotal += qty;
                $item.find("#Total").text(subTotal);
            });

            $recoveryBtn.click(function () {
                $.ajax({
                    url: '@Url.Action("recoveryOrder", "ajax")',
                    type: 'get',
                    dataType: 'json',
                    success: function (response) {
                        alert(response['message']);

                        if (response['status']) {
                            $dataGrid.datagrid('uncheckAll');
                            $dataGrid.datagrid('reload');
                        }
                    }
                })
            });

            $exportBtn.click(function () {
                var orderIDs = [];
                var rows = $dataGrid.datagrid('getRows');

                if (rows.length > 0) {
                    for (var i in rows) {
                        orderIDs[i] = rows[i].OrderID;
                    }

                    $("#input-IDs").val(orderIDs);
                    $("#form-data").attr("action", "@Url.Action("export", "file")").submit();
                }
            });
        });

        function dataInit() {
            $dataGrid = $("#DataGrid").datagrid({
                title: "訂單 列表",
                idField: "PackageID",
                url: "@Url.Action("orderData", "ajax")",
                queryParams: {},
                width: "100%",
                height: "700",
                checkOnSelect: false,
                selectOnCheck: false,
                singleSelect: false,
                frozenColumns: [[
                    { field: "ck", checkbox: true },
                    {
                        field: "OrderID", title: "Order ID<br />訂單號碼", width: 200, align: "center", sortable: true,
                        formatter: function (value, row, index) {
                            if (row.ParentOrderID != 0) {
                                var url = value + "(<a href='https://dm.cwa.sellercloud.com/Orders/Orders_details.aspx?id=" + row.ParentOrderID + "' target='_blank'>" + row.ParentOrderID + "</a>)"
                            } else {
                                var url = "<a href='https://dm.cwa.sellercloud.com/Orders/Orders_details.aspx?id=" + value + "' target='_blank'>" + value + "</a>";
                            }
                            if (row.OrderSourceOrderId != "") url += "<br />" + row.OrderSourceOrderId;
                            return url;
                        }
                    }
                ]],
                columns: [[
                    {
                        field: "eBayUserID", title: "User ID<br />客戶帳號", width: 130, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return Boolean(value) ? "<a href='http://feedback.ebay.com/ws/eBayISAPI.dll?ViewFeedback2&UserID=" + value + "' target='_blank'>" + value + "</a>" : "";
                        }
                    },
                    { field: "PaymentDate", title: "Payment Date<br />付款日", width: 120, align: "center", sortable: false },
                    { field: "Sku", title: "SKU<br />品號", width: 110, align: "center", sortable: false },
                    { field: "DisplayName", title: "Item Name<br />品名", width: 440, align: "center", sortable: false },
                    { field: "OrderQtyTotal", title: "QTY<br />數量", width: 60, align: "center", sortable: false },
                    { field: "ShippingCountry", title: "Country<br />國家", width: 120, align: "center", sortable: false },
                    { field: "PostalCode", title: "Zipcode<br />郵遞區號", width: 110, align: "center", sortable: false },
                    { field: "SubTotal", title: "總價", width: 90, align: "center", sortable: false },
                    {
                        field: "DeclaredTotal", title: "Export Value<br />出口價值", width: 90, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            value = value != '' ? value : row.SubTotal;
                            return "<input type='text' class='form-control input-sm' id='DeclaredTotal' value='" + value + "' onchange='changePrice(" + row.PackageID + ", 1)' " + (row.ItemCount > 1 ? "readonly" : "") + ">"
                        }
                    }, {
                        field: "DLDeclaredTotal", title: "DL Export Value<br />DL出口價值", width: 90, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            value = value != '' ? value : row.SubTotal;
                            return "<input type='text' class='form-control input-sm' id='DLDeclaredTotal' value='" + value + "' onchange='changePrice(" + row.PackageID + ", 2)' " + (row.ItemCount > 1 ? "readonly" : "") + ">"
                        }
                    }, {
                        field: "OrderCurrencyCode", title: "Currency<br />幣別", width: 80, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<select class='form-control input-sm' id='OrderCurrencyCode' onchange='onDataChange(" + row.PackageID + ")'>" + getSelectOption(orderColumOption.currencyCode, value) + "</select>";
                        }
                    }, {
                        field: "ShipWarehouse", title: "Warehouse<br />出貨倉", width: 150, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<select class='form-control input-sm' id='ShipWarehouse' onchange='onDataChange(" + row.PackageID + ", true)'>" + getSelectOption(orderColumOption.warehouse, value) + "</select>";
                        }
                    },
                    { field: "AvailableQty", title: "Available QTY<br />可用庫存", width: 90, align: "center", sortable: false },
                    { field: "ShippingServiceSelected", title: "Default Shipping Method<br />預設運輸方式", width: 250, align: "center", sortable: false },
                    {
                        field: "MethodID", title: "Shipping Method<br />運輸方式", width: 150, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<select class='form-control input-sm' id='MethodID' onchange='onDataChange(" + row.PackageID + ")'>" + getSelectOption(filterCarrierOption(row.ShipWarehouse), value) + "</select>";
                        }
                    }, {
                        field: "Export", title: "Export<br />出口報關", width: 100, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<select class='form-control input-sm' id='Export' onchange='onDataChange(" + row.PackageID + ")'>" + getSelectOption(orderColumOption.export, value) + "</select>";
                        }
                    }, {
                        field: "ExportMethod", title: "Export Method<br />申報性質", width: 170, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<select class='form-control input-sm' id='ExportMethod' onchange='onDataChange(" + row.PackageID + ")'>" + getSelectOption(orderColumOption.exportMethod, value) + "</select>";
                        }
                    }, {
                        field: "StatusCode", title: "Status<br />訂單狀態", width: 120, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<select class='form-control input-sm' id='StatusCode' onchange='onDataChange(" + row.PackageID + ")'>" + getSelectOption(orderColumOption.statusCode, value) + "</select>";
                        }
                    }, {
                        field: "RushOrder", title: "RushOrder<br />急件", width: 80, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return setCheckBox(row.PackageID, this.field, value);
                        }
                    }, {
                        field: "UploadTracking", title: "IsTracking<br />上傳單號", width: 80, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return setCheckBox(row.PackageID, this.field, value);
                        }
                    },
                    { field: "Instructions", title: "Buyer Note<br />客戶備註", width: 200, align: "center", sortable: false },
                    {
                        field: "Comment", title: "Comment<br />出貨備註", width: 200, align: "center", sortable: false,
                        formatter: function (value, row, index) {
                            return "<input type='text' class='form-control input-sm' id='Comment' value='" + value + "' onchange='onDataChange(" + row.PackageID + ")'>";
                        }
                    }, {
                        field: "save", title: "<button type='button' class='btn btn-default btn-sm' onclick='saveData()'>SAVE</button>", width: "60", sortable: false,
                        formatter: function (value, row, index) {
                            return "<button type='button' class='btn btn-default btn-sm' id='btn-save' onclick='saveData(" + row.PackageID + ")' disabled>SAVE</button>"
                        }
                    }
                ]],
                onLoadSuccess: function (data) {
                    $dataGrid.datagrid('uncheckAll');
                    $('div.datagrid-body').unbind('dblclick');
                },
                onBeforeLoad: function (param) {
                    param.WarehouseID = $warehouseSelect.val() || $warehouseSearch.val();
                    param.MethodID = $carrierSelect.val() || $methodSearch.val();
                    param.Export = $exportSelect.val();
                    param.ExportMethod = $exportMethodSelect.val();
                    param.StatusCode = $statusCodeSelect.val() || $statusSearch.val();

                    param.OrderID = $orderIDSearch.val();
                    param.ItemName = $itemSearch.val();
                    param.UserID = $userIDSearch.val();
                    param.SourceID = $sourceIDSearch.val();
                    param.DateFrom = $dateFromSearch.val();
                    param.DateTo = $dateToSearch.val();
                    param.PaymentStatus = $paymentSearch.val();
                    param.Source = $channelSearch.val();
                    param.Country = $countrySearch.val();
                },
                onBeforeSelect: selectAction,
                onBeforeUnselect: selectAction,
                onCheck: onCheck,
                onUncheck: onUncheck,
                onCheckAll: onCheckAll,
                onUncheckAll: onUncheckAll,
                view: detailview,
                detailFormatter: function (index, row) {
                    return '<div id="itemList"></div>';
                },
                onExpandRow: function (index, row) {
                    if (row.ItemCount == 1) {
                        $dataGrid.datagrid("collapseRow", index);
                    } else {
                        var $itemList = $("div#itemList:eq(" + index + ")");

                        $itemList.panel({
                            border: false,
                            cache: false,
                            href: "@Html.Raw(Url.Action("orderProductList", "ajax", new { PackageID = "_id_", Type = "Order" }))".replace("_id_", row.PackageID),
                            onLoad: function (response) {
                                $("#datagrid-row-r1-1-" + index).next("tr").find(".datagrid-row-detail").html($itemList.find("table:hidden").remove().removeClass("hidden"));
                            }
                        });

                        $dataGrid.datagrid("fixDetailRowHeight", index);
                    }
                },
                pagination: true,
                pagePosition: "bottom",
                pageSize: pageSize
            });

            pager = $dataGrid.datagrid("getPager");
            $(pager).pagination({
                pageSize: pageSize,
                showPageList: true,
                pageList: [100, 200, 300, 500],
                beforePageTest: "第",
                afterPageTest: "頁，共 {pages} 頁",
                displayMsg: "顯示 {from} 到 {to} 筆資料，共 {total} 筆資料"
            });
        }

        function selectAction(index, row) {
            if (selected) {
                selected = false;
                return true;
            }

            return false;
        }

        function onDataChange(PackageID, changeWarehouse) {
            var index = $dataGrid.datagrid("getRowIndex", PackageID);

            if (changeWarehouse == true) {
                var Package = $dataGrid.datagrid("getRows")[index];
                var warehouseID = $("select#ShipWarehouse:eq(" + index + ")").val();
                $("select#MethodID:eq(" + index + ")").html(getSelectOption(filterCarrierOption(warehouseID), Package.MethodID));
            }

            $dataGrid.datagrid('checkRow', index);
            $("button#btn-save:eq(" + index + ")").removeAttr("disabled");
        }

        function onSelect(index) {
            $dataGrid.datagrid('checkRow', index);
        }

        function onCheck(index, row) {
            selected = true;
            $dataGrid.datagrid('selectRow', index);
        }

        function onUncheck(index, row) {
            selected = true;
            $dataGrid.datagrid('unselectRow', index);
        }

        function onCheckAll(rows) {
            $dataGrid.datagrid('selectAll');
        }

        function onUncheckAll(rows) {
            $dataGrid.datagrid('unselectAll');
        }

        function changePrice(packageID, type) {
            var DeclaredTotal = 0;
            var index = $dataGrid.datagrid("getRowIndex", packageID);
            var Package = $dataGrid.datagrid("getRows")[index];

            var $DeclaredTotal;
            switch (type) {
                case 1:
                    $DeclaredTotal = $("input#DeclaredTotal:eq(" + index + ")");
                    if ($DeclaredTotal.is("[readonly]")) {
                        $("div#itemList:eq(" + index + ")").find("input#DeclaredValue").each(function () {
                            Package.Items[$(this).data("id")].DeclaredValue = $(this).val();
                            DeclaredTotal += parseFloat($(this).val().replace(',', '')) * parseFloat($(this).data('qty'));
                            $(this).number(true, 2);
                        });

                        $DeclaredTotal.val(DeclaredTotal).number(true, 2);
                    } else {
                        var itemID = Object.keys(Package.Items)[0];
                        Package.Items[itemID].DeclaredValue = parseFloat($DeclaredTotal.val().replace(',', '')) / parseFloat(Package.Items[itemID].Qty);
                        $DeclaredTotal.number(true, 2)
                    }
                    break;
                case 2:
                    $DeclaredTotal = $("input#DLDeclaredTotal:eq(" + index + ")");
                    if ($DeclaredTotal.is("[readonly]")) {
                        $("div#itemList:eq(" + index + ")").find("input#DLDeclaredValue").each(function () {
                            Package.Items[$(this).data("id")].DLDeclaredValue = $(this).val();
                            DeclaredTotal += parseFloat($(this).val().replace(',', '')) * parseFloat($(this).data('qty'));
                            $(this).number(true, 2);
                        });

                        $DeclaredTotal.val(DeclaredTotal).number(true, 2);
                    } else {
                        var itemID = Object.keys(Package.Items)[0];
                        Package.Items[itemID].DLDeclaredValue = parseFloat($DeclaredTotal.val().replace(',', '')) / parseFloat(Package.Items[itemID].Qty);
                        $DeclaredTotal.number(true, 2)
                    }
                    break;
            }
            onDataChange(packageID);
        }

        function saveData(PackageID) {
            var data = [];
            var saveAll = PackageID == undefined;

            if (!loaded) {
                if (saveAll) {
                    var rows = $dataGrid.datagrid('getSelections');
                    for (var i in rows) {
                        index = $dataGrid.datagrid('getRowIndex', rows[i].PackageID);
                        if (!$("button#btn-save:eq(" + index + ")").is("[disabled]")) {
                            data.push(setData(rows[i], index));
                            $("button#btn-save:eq(" + index + ")").attr("disabled", "disabled");
                        }
                    }
                } else {
                    var index = $dataGrid.datagrid("getRowIndex", PackageID);
                    row = $dataGrid.datagrid("getRows")[index];
                    data.push(setData(row, index));
                    $("button#btn-save:eq(" + index + ")").attr("disabled", "disabled");
                }

                if (data.length > 0) {
                    updateData(data).done(function (response) {
                        if (response['status']) {
                            if (isEmpty(response['data'])) {
                                alert("Success!");
                            } else {
                                window.open(response['data'], '新工作', 'height=500,width=500,toolbar=no,resizable=no,location=no,menubar=no,status=no');
                            }
                        } else {
                            alert(response['message']);
                        }

                        loaded = false;
                    });
                }
            }

            $dataGrid.datagrid('uncheckAll');
        }

        function setData(row, index) {
            return {
                OrderID: row.OrderID,
                PackageID: row.PackageID,
                Items: row.Items,
                DeclaredTotal: $("input#DeclaredTotal:eq(" + index + ")").val().replace(',', ''),
                DLDeclaredTotal: $("input#DLDeclaredTotal:eq(" + index + ")").val().replace(',', ''),
                OrderCurrencyCode: $("select#OrderCurrencyCode:eq(" + index + ")").val(),
                ShipWarehouse: $("select#ShipWarehouse:eq(" + index + ")").val(),
                MethodID: $("select#MethodID:eq(" + index + ")").val(),
                Export: $("select#Export:eq(" + index + ")").val(),
                ExportMethod: $("select#ExportMethod:eq(" + index + ")").val(),
                StatusCode: $("select#StatusCode:eq(" + index + ")").val(),
                RushOrder: $("input#RushOrder:eq(" + index + ")").prop("checked"),
                UploadTracking: $("input#UploadTracking:eq(" + index + ")").prop("checked"),
                Comment: $("input#Comment:eq(" + index + ")").val()
            }
        }

        function updateData(data) {
            loaded = true;

            return $.ajax({
                url: "@Url.Action("OrderUpdate", "ajax")",
                type: "post",
                data: { data: data },
                dataType: "json"
            });
        }

        function setCheckBox(PackageID, field, value) {
            var name = field;
            return "<input type='checkbox' class='form-control' id='" + name + "' " + (value ? "checked" : "") + " onchange='onDataChange(" + PackageID + ")'>"
        }

        function getSelectOption(optionList, value) {
            var option = "";

            if (optionList.length > 0) {
                for (var i in optionList) {
                    option += "<option value='" + optionList[i]["value"] + "' " + (optionList[i]["value"] == value ? "selected" : "") + ">" + optionList[i]["text"] + "</option>";
                }
            }

            return option;
        }

        function checkProcess(id) {
            var url = "@Url.Action("checkProcessStatus", "orderSync")/" + id;

            getOption(url).done(function (response) {
                if (!response['success']) {
                    alert(response['message']);
                    return;
                } else {
                    if (response['status']) {
                        alert(response['message']);
                        $syncBtn.removeClass("processing");
                        $dataGrid.datagrid('uncheckAll');
                        $dataGrid.datagrid('reload');
                        return;
                    }
                }
            });
        }

        function getOption(url) {
            return $.ajax({
                url: url,
                dataType: "json"
            });
        }

        function splitPackage() {
            var $splitTable = $splitWin.find('#table-split');
            var amount = $splitTable.data('amount');
            var items = $.map(new Array(amount), function () { return {}; });

            var checkQty = $splitTable.find('tbody tr').filter(function (i, item) {
                var $item = $(item), qty = 0;

                $item.find('input').each(function (j, obj) {
                    items[j][parseInt($(obj).data('id'))] = parseInt($(obj).val());
                    qty += parseInt($(obj).val());
                });

                if (qty != $item.data('qty')) {
                    alert('品號 ' + $item.data('sku') + ' 的總數不正確!');
                    return true;
                }
                return false;
            });

            if (checkQty.length > 0) return false;

            var checkSku = items.filter(function (skus, i) {
                var qty = Object.keys(skus).map(function (itemID) { return skus[itemID]; }).reduce((a, b) => a + b);

                if (qty == 0) {
                    alert('包裏-' + (i + 1) + '未選擇數量!');
                    return true;
                }
                return false;
            });

            if (checkSku.length > 0) return false;

            return $.ajax({
                url: '@Url.Action("splitPackage", "order")',
                type: 'post',
                data: { PackageID: parseInt($splitTable.data('id')), splitItems: items },
                dataType: 'json',
                success: function (response) {
                    if (response['status']) {
                        $splitWin.window("close");
                    }

                    alert(response['message']);
                }
            });
        }

        function filterCarrierOption(warehouseID) {
            return orderColumOption.carrier.filter(function (value) {
                return orderColumOption.carrierOfWarehouse[warehouseID][value["value"]];
            });
        }

        function isEmpty(value) {
            return (value == undefined) || (value == null) || (value == "");
        }

        var urlParam = function (name) {
            var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
            if (results == null) {
                return null;
            }
            else {
                return decodeURI(results[1]) || 0;
            }
        }
    </script>
}


