<style>
    #content tr td {
        vertical-align: middle;
    }

    .dataTables_filter {
        float: none;
    }

    .form-horizontal .form-control {
        width: 100%;
    }

    .checkbox-inline {
        padding-top: 0 !important;
    }

        .checkbox-inline label span {
            margin-right: 0 !important;
            margin-left: -15px !important;
        }

            .checkbox-inline label span :before {
                margin-right: 3px;
            }

    .DTFC_LeftHeadWrapper, .DTFC_RightHeadWrapper {
        margin-top: -6px;
    }

    .DTFC_LeftBodyLiner, .DTFC_RightBodyLiner {
        z-index: 40;
    }
</style>
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12">
                <div class="jarviswidget jarviswidget-color-darken" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false"
                     data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false" data-widget-sortable="false">

                    <header>
                        <span class="widget-icon"><i class="fa fa-table"></i></span>

                        <h2>預設組別</h2>
                    </header>

                    <div>
                        <div class="widget-body no-padding">
                            <div class="table-responsive">
                                <table id="dt_basic" class="form-horizontal table table-bordered table-striped text-center">
                                    <thead>
                                        <tr>
                                            <th width="30" class="text-center">啟用</th>
                                            <th width="30" class="text-center">提交</th>
                                            <th width="50" class="text-center">優先權</th>
                                            <th width="200" class="text-center">Action - 類型</th>
                                            <th width="200" class="text-center">Action - 數值</th>
                                            <th width="150" class="text-center">Order value</th>
                                            <th width="120" class="text-center">Delivery country</th>
                                            <th width="100" class="text-center">State</th>
                                            <th width="100" class="text-center">Zip Code</th>
                                            <th width="200" class="text-center">Company</th>
                                            <th width="150" class="text-center">Sales channel</th>
                                            <th width="120" class="text-center">Item QTY per order</th>
                                            <th width="200" class="text-center">Shipping Method</th>
                                            <th width="100" class="text-center">SKU</th>
                                            <th width="100" class="text-center">Last 3 digits of SKU</th>
                                            <th width="100" class="text-center">Product Type</th>
                                            <th width="100" class="text-center">Brand</th>
                                            <th width="100" class="text-center">Battery</th>
                                            <th width="150" class="text-center">Item shipping weight</th>
                                            <th width="100" class="text-center">Check Inventory</th>
                                            <th width="" class="text-center">功能</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <script type="text/javascript">
        var $Table;
        var countryList, stateList, companyList, sourceList, methodList, warehouseList, productTypeList, brandList, battery, stock;

        $(document).ready(function () {
            var url = '@Url.RouteUrl("website", new {controller = "preset", action = "ajaxOption"})';
            ajaxData(url).done(function (response) {
                if (response['status']) {
                    countryList = response['data']['countryList'];
                    stateList = response['data']['stateList'];
                    companyList = response['data']['companyList'];
                    sourceList = response['data']['sourceList'];
                    methodList = response['data']['methodList'];
                    warehouseList = response['data']['warehouseList'];
                    productTypeList = response.data.productTypeList;
                    brandList = response.data.brandList;
                    battery = response.data.battery;
                    stock = response.data.checkStock;
                }

                dataInit();
            });
        });

        function dataInit() {
            var responsiveHelper_dt_basic = undefined;
            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $Table = $('#dt_basic').DataTable({
                "scrollX": true,
                "scrollCollapse": true,
                "fixedColumns": {
                    "leftColumns": 5,
                    "rightColumns": 1
                },
                "ordering": true,
                "serverSide": true,
                "sDom": "<'dt-toolbar'<'col-sm-8 hidden-xs'><'col-xs-12 col-sm-4'Tl>>" + "t" + "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "oTableTools": {
                    "aButtons": [{
                        "sExtends": "text",
                        "sButtonText": '<i class="fa fa-plus"></i> <span class="hidden-mobile">新增組別</span>',
                        "sButtonClass": "btn-lg",
                        "fnInit": function (nButton, oConfig) {
                            $(nButton).css('margin-left', 5);
                        },
                        "fnClick": function (nButton, oConfig, oFlash) {
                            var url = '@Url.RouteUrl("website", new {controller = "preset", action = "add"})';
                            ajaxData(url).done(function (response) {
                                if (response['status']) {
                                    $Table.draw();
                                }
                            });
                        }
                    }]
                },
                "ajax": {
                    "url": '@Url.RouteUrl("website", new {controller = "preset", action = "ajaxData"})',
                    "type": 'post',
                    "data": function (data) { }
                },
                "columns": [
                    {
                        data: "visible", orderable: false, render: function (data, type, row, meta) {
                            var id = 'visible-' + row.id;
                            var checked = data ? 'checked' : '';
                            return "<div class='checkbox-inline'><label><input type='checkbox' class='checkbox' id='" + id + "' " + checked + "><span></span></lebel></div>";
                        }
                    }, {
                        data: "dispatch", orderable: false, render: function (data, type, row, meta) {
                            var id = 'dispatch-' + row.id;
                            var checked = data ? 'checked' : '';
                            return "<div class='checkbox-inline'><label><input type='checkbox' class='checkbox' id='" + id + "' " + checked + "><span></span></lebel></div>";
                        }
                    }, {
                        data: "priority", orderable: false, render: function (data, type, row, meta) {
                            return "<input type='number' class='form-control' id='priority-" + row.id + "' value='" + data + "' min='1'>";
                        }
                    }, {
                        data: "type", render: function (data, type, row, meta) {
                            var id = 'type-' + row.id;
                            var option = ['尚未選擇', 'Upload Tracking', 'Rush order', 'Declare Value', 'Warehouse & Shipping Method', 'DL Declare Value', 'Warehouse & First Mile'];
                            return "<select class='form-control' id='" + id + "' onchange='changeBox(" + row.id + ");'>" + setSelectOption(option, data) + "</select>";
                        }
                    }, {
                        data: "value", orderable: false, render: function (data, type, row, meta) {
                            return "<div id='box-" + row.id + "'>" + setBoxHtml(row.type.toString(), row.id, row) + "</div>";
                        }
                    }, {
                        data: "total", render: function (data, type, row, meta) {
                            return setNumberType('total', row.id, data, row.totalType);
                        }
                    }, {
                        data: "country", render: function (data, type, row, meta) {
                            var id = 'country-' + row.id;
                            return "<select class='form-control' id='" + id + "'><option value=''>不選擇</option>" + setSelectOption(countryList, data) + "</select>";
                        }
                    }, {
                        data: "state", render: function (data, type, row, meta) {
                            var id = 'state-' + row.id;
                            return "<select class='form-control' id='" + id + "'><option value=''>不選擇</option>" + setSelectOption(stateList, data) + "</select>";
                        }
                    }, {
                        data: "zipCode", orderable: false, render: function (data, type, row, meta) {
                            return "<input type='number' class='form-control' id='zipCodeFrom-" + row.id + "' value='" + row.zipCodeFrom + "' min='0' placeholder='From'>"
                                + "<input type='number' class='form-control' id='zipCodeTo-" + row.id + "' value='" + row.zipCodeTo + "' min='0' placeholder='To'>";
                        }
                    }, {
                        data: "company", render: function (data, type, row, meta) {
                            var id = 'company-' + row.id;
                            return "<select class='form-control' id='" + id + "'><option value=''>不選擇</option>" + setSelectOption(companyList, data.toString()) + "</select>";
                        }
                    }, {
                        data: "channel", render: function (data, type, row, meta) {
                            var id = 'channel-' + row.id;
                            return "<select class='form-control' id='" + id + "'><option value=''>不選擇</option>" + setSelectOption(sourceList, data.toString()) + "</select>";
                        }
                    }, {
                        data: "amount", render: function (data, type, row, meta) {
                            return setNumberType('amount', row.id, data, row.amountType);
                        }
                    }, {
                        data: "method", render: function (data, type, row, meta) {
                            var id = 'method-' + row.id;
                            return "<select class='form-control' id='" + id + "'><option value=''>不選擇</option>" + setSelectOption(methodList, data) + "</select>";
                        }
                    }, {
                        data: "sku", render: function (data, type, row, meta) {
                            return "<input class='form-control' id='sku-" + row.id + "' value='" + $.trim(data) + "'>";
                        }
                    }, {
                        data: "suffix", render: function (data, type, row, meta) {
                            return "<input class='form-control' id='suffix-" + row.id + "' value='" + $.trim(data) + "'>";
                        }
                    }, {
                        data: "productType", render: function (data, type, row, meta) {
                            var id = 'productType-' + row.id;
                            return "<select class='form-control' id='" + id + "'><option value=''>不選擇</option>" + setSelectOption(productTypeList, data.toString()) + "</select>";
                        }
                    }, {
                        data: "brand", render: function (data, type, row, meta) {
                            var id = 'brand-' + row.id;
                            return "<select class='form-control' id='" + id + "'><option value=''>不選擇</option>" + setSelectOption(brandList, data.toString()) + "</select>";
                        }
                    }, {
                        data: "battery", render: function (data, type, row, meta) {
                            var id = 'battery-' + row.id;
                            return "<select class='form-control' id='" + id + "'><option value=''>不選擇</option>" + setSelectOption(battery, !isEmpty(data) ? (data ? '1' : '0') : null) + "</select>";
                        }
                    }, {
                        data: "weight", render: function (data, type, row, meta) {
                            return setNumberType('weight', row.id, data, row.weightType);
                        }
                    }, {
                        data: "checkStock", render: function (data, type, row, meta) {
                            var id = 'stock-' + row.id;
                            return "<select class='form-control' id='" + id + "'><option value=''>不選擇</option>" + setSelectOption(stock, !isEmpty(data) ? (data ? '1' : '0') : null) + "</select>";
                        }
                    }, {
                        data: "action", orderable: false, render: function (data, type, row, meta) {
                            var saveBtn = "<button class='btn btn-default' onclick='saveData(" + row.id + ");'><i class='fa fa-save'></i><span class='hidden-mobile'> Save</span></button>";
                            var deleteBtn = "<button class='btn btn-danger' onclick='deleteData(" + row.id + ");'><i class='glyphicon glyphicon-trash'></i><span class='hidden-mobile'> Delete</span></button>";
                            return saveBtn + deleteBtn;
                        }
                    }
                ],
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow, data, index) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                },
                "initComplete": function () {
                }
            });
        }

        function setSelectOption(array, select) {
            var option = '';
            $.each(array, function (i, value) {
                var selected = (!isEmpty(select) && (select === i)) ? 'selected' : '';
                option += "<option value='" + i + "' " + selected + ">" + value + "</option>";
            });
            return option;
        }

        function changeBox(id) {
            var type = $('.DTFC_Cloned #type-' + id).val();
            $('div#box-' + id).html(setBoxHtml(type, id, {}));
        }

        function setNumberType(column, id, value, type) {
            var typeArray = ['>', '<', '=', '>=', '<='];
            var dataType = "<span class='input-group-addon'>" + typeArray[type] + "</span><input type='hidden' id='" + column + "Type-" + id + "' value='" + type + "'>";
            var button = "<button type='button' class='btn btn-default dropdown-toggle' data-toggle='dropdown'><span class='caret'></span></button>";
            var dropdown = "<ul class='dropdown-menu pull-right' role='menu'>";
            $.each(typeArray, function (i, t) {
                dropdown += "<li><a href='javascript:void(0);' onclick='changeType(\"" + column + "Type-" + id + "\", " + i + ", \"" + t + "\");'>" + t + "</a></li>";
            });
            dropdown += '</ul>';
            var id = column + '-' + id;
            return "<div class='input-group'>" + dataType + "<input type='text' class='form-control' id='" + id + "' value='" + value + "'><div class='input-group-btn'>" + button + dropdown + "</div></div>";
        }

        function changeType(id, type, option, hasClass) {
            var $input = !isEmpty(hasClass) ? $('.DTFC_Cloned #' + id) : $('#' + id);
            $input.val(type).siblings('.input-group-addon').html(option);
        }

        function setBoxHtml(type, id, row) {
            var html = '';

            switch (type) {
                case '1': //Upload Tracking
                case '2': //Rush order
                    html += "<select class='form-control' id='value-" + id + "'>";
                    html += setSelectOption(['FALSE', 'TRUE'], row.value);
                    html += '</select>';
                    break;
                case '3': //Declare Value
                case '5': //DL Declare Value
                    var value = !isEmpty(row.value) ? row.value : '';
                    var valueType = !isEmpty(row.valueType) ? row.valueType : 0;
                    var typeArray = ['%', '$'];
                    var dataType = "<span class='input-group-addon'>" + typeArray[valueType] + "</span><input type='hidden' id='valueType-" + id + "' value='" + valueType + "'>";
                    var button = "<button type='button' class='btn btn-default dropdown-toggle' data-toggle='dropdown'><span class='caret'></span></button>";
                    var dropdown = "<ul class='dropdown-menu pull-right' role='menu'>";
                    $.each(typeArray, function (i, t) {
                        dropdown += "<li><a href='javascript:void(0);' onclick='changeType(\"valueType-" + id + "\", " + i + ", \"" + t + "\", true);'>" + t + "</a></li>";
                    });
                    dropdown += '</ul>';
                    html += "<div class='input-group'><div class='input-group-btn'>" + button + dropdown + "</div><input class='form-control' id='value-" + id + "' type='text' value='" + value + "'>" + dataType + "</div>";
                    break;
                case '4': //Warehouse & Shipping Method
                case '6': //Warehouse & First Mile
                    var warehouseID = !isEmpty(row.warehouse) && row.warehouse != 0 ? row.warehouse.toString() : Object.keys(warehouseList)[0].toString();
                    html += "<select class='form-control' id='warehouse-" + id + "' onchange='getMethodOption(" + id + ", $(this).val());'>" + setSelectOption(warehouseList, warehouseID) + "</select>";
                    html += "<select class='form-control' id='methodID-" + id + "'></select>";
                    getMethodOption(id, warehouseID, !isEmpty(row.shippingMethod) ? row.shippingMethod.toString() : '');
                    break;
            }
            return html;
        }

        function getMethodOption(id, warehouseID, methodID) {
            var url = '@Url.RouteUrl("website", new { controller = "preset", action = "ajaxShippingMethod" })';
            ajaxData(url, 'get', { warehouseID: warehouseID }).done(function (response) {
                if (response['status']) {
                    $('select#methodID-' + id).html(setSelectOption(response['data'], methodID));
                }
            });
        }

        function saveData(id) {
            var url = '@Url.RouteUrl("website", new { controller = "preset", action = "edit" })';
            var data = {
                IsEnable: true,
                IsVisible: $('.DTFC_Cloned #visible-' + id).prop('checked') && $('.DTFC_Cloned #type-' + id).val() != 0,
                IsDispatch: $('.DTFC_Cloned #dispatch-' + id).prop('checked'),
                Id: parseInt(id),
                Priority: checkValue($('.DTFC_Cloned #priority-' + id).val(), true),
                Type: checkValue($('.DTFC_Cloned #type-' + id).val(), true),
                Value: checkValue($('.DTFC_Cloned #value-' + id).val(), true),
                ValueType: checkValue($('.DTFC_Cloned #valueType-' + id).val(), true),
                Total: checkValue($('#total-' + id).val(), true),
                TotalType: checkValue($('#totalType-' + id).val(), true),
                Country: checkValue($('#country-' + id).val(), false),
                State: checkValue($('#state-' + id).val(), false),
                ZipCodeFrom: checkValue($('#zipCodeFrom-' + id).val(), true),
                ZipCodeTo: checkValue($('#zipCodeTo-' + id).val(), true),
                CompanyID: checkValue($('#company-' + id).val(), true),
                SourceID: checkValue($('#channel-' + id).val(), true),
                Amount: checkValue($('#amount-' + id).val(), true),
                AmountType: checkValue($('#amountType-' + id).val(), true),
                ShippingMethod: checkValue($('#method-' + id).val(), false),
                Sku: checkValue($('#sku-' + id).val(), false),
                Suffix: checkValue($('#suffix-' + id).val(), false),
                ProductType: checkValue($('#productType-' + id).val(), true),
                Brand: checkValue($('#brand-' + id).val(), true),
                Battery: !isEmpty($('#battery-' + id).val()) ? $('#battery-' + id).val() == '1' : null,
                Weight: checkValue($('#weight-' + id).val(), true),
                WeightType: checkValue($('#weightType-' + id).val(), true),
                WarehouseID: checkValue($('.DTFC_Cloned #warehouse-' + id).val(), true),
                MethodID: checkValue($('.DTFC_Cloned #methodID-' + id).val(), true),
                CheckSkuStock: !isEmpty($('#stock-' + id).val()) ? $('#stock-' + id).val() == '1' : null
            };
            ajaxData(url, 'post', data).done(function (response) {
                if (response['status']) {
                    alert('Save success!');
                    $Table.draw();
                } else {
                    alert(response['message']);
                }
            });
        }

        function checkValue(value, isNum) {
            return !isEmpty(value) ? value : (isNum ? 0 : null);
        }

        function deleteData(id) {
            if (confirm('確定要刪除')) {
                var url = '@Url.RouteUrl("website", new { controller = "preset", action = "edit" })';
                ajaxData(url, 'post', { id: id }).done(function (response) {
                    if (response['status']) {
                        alert('Delete success!');
                        $Table.draw();
                    } else {
                        alert(response['message']);
                    }
                });
            }
        }

        function ajaxData(url, type, data) {
            type = isEmpty(type) ? 'get' : type;
            data = isEmpty(data) ? {} : data;

            return $.ajax({ url: url, type: type, data: data, dataType: 'json' });
        }

        function isEmpty($value) {
            return $value == undefined || $value == null || $value === '';
        }
    </script>
}
